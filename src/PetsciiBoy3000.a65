; ------------------------------------------------------------
; Mad Pascal Compiler version 1.7.2 [2025/05/08] for MOS 6502 CPU
; ------------------------------------------------------------

STACKWIDTH	= 16

TRUE		= 1
FALSE		= 0
EOL		= $0D
__BUFFER	= $0800
@BUF		= __BUFFER

; ------------------------------------------------------------

	org $02

zpage

.if .def(@AllocMem)||.def(MAIN.SYSTEM.GETMEM)||.def(MAIN.SYSTEM.FREEMEM)
psptr	.ds 2						; PROGRAMSTACK Pointer
.fi

bp	.ds 2
bp2	.ds 2
bp3	= bp+1

eax	.ds 4						;8 bytes (aex + edx) -> divREAL
edx	.ds 4
ecx	.ds 4

TMP
ztmp
ztmp8	.ds 1
ztmp9	.ds 1
ztmp10	.ds 1
ztmp11	.ds 1

STACKORIGIN	.ds STACKWIDTH*4
zpend

; ------------------------------------------------------------

ax	= eax
al	= eax
ah	= eax+1

cx	= ecx
cl	= ecx
ch	= ecx+1

dx	= edx
dl	= edx
dh	= edx+1

	org eax

FP1MAN0	.ds 1
FP1MAN1	.ds 1
FP1MAN2	.ds 1
FP1MAN3	.ds 1

	org edx

FP2MAN0	.ds 1
FP2MAN1	.ds 1
FP2MAN2	.ds 1
FP2MAN3	.ds 1

	org ecx

FPMAN0	.ds 1
FPMAN1	.ds 1
FPMAN2	.ds 1
FPMAN3	.ds 1

	org ztmp8

FP1SGN	.ds 1
FP1EXP	.ds 1

	org ztmp10

FP2SGN	.ds 1
FP2EXP	.ds 1

	org bp2

FPSGN	.ds 1
FPEXP	.ds 1

; ------------------------------------------------------------
	opt h-f+
	org $801
	org [a($801)],$801
	basic_start(START)

	org $900

CODEORIGIN

	STATICDATA

; ------------------------------------------------------------

RTLIB
	icl 'rtl6502_c64.asm'

.print 'ZPAGE: ',zpage,'..',zpend-1

.print 'RTBUF: ',@buf,'..',@buf+255

.print 'RTLIB: ',RTLIB,'..',*-1

; ------------------------------------------------------------

START
	tsx
	stx MAIN.@halt+1

VLEN	= VARDATASIZE-VARINITSIZE
VADR	= DATAORIGIN+VARINITSIZE

	ift (VLEN > 0) && (VLEN <= 256)
	ldx #256-VLEN
	lda #$00
	sta:rne VADR+VLEN-256,x+
	eli VLEN>256
	m@init
	eif

.ifdef psptr
	mwa #PROGRAMSTACK psptr
.fi

	lda #$0e
	jsr $ffd2					; shifted charset

	ldx #$00
	stx bp						; BP = 0

	dex						; X = 255

	UNITINITIALIZATION

.local	MAIN						; PROCEDURE

	jmp l_027A

; ------------------------------------------------------------

.local	SYSTEM						; UNIT

.local	PEEK						; FUNCTION | ASSEMBLER | REGISTER

; ------------------------------------------------------------

; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
; as Pointer
	lda :STACKORIGIN,x
	sta A
	lda :STACKORIGIN+STACKWIDTH,x
	sta A+1
	dex
@main

; -------------------  ASM Block 00000002  -------------------

	ldy #0
	mva (:edx),y Result

@exit

; ------------------------------------------------------------

; Push BYTE / CHAR / SHORTINT / BOOLEAN
; as Pointer

	inx
	mva RESULT :STACKORIGIN,x

	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	eif

; ------------------------------------------------------------

A	= :EDX
RESULT	= :STACKORIGIN-4

	rts						; ret
.endl

.local	EXP						; FUNCTION | OVERLOAD
.local	@01018F000

; optimize OK (SYSTEM), line = 973

	lda X
	sta FRACTION
	lda X+1
	sta FRACTION+1
	lda X+2
	sta FRACTION+2
	lda X+3
	sta FRACTION+3

; optimize OK (SYSTEM), line = 974

	lda #$00
	sta :FP2MAN0
	sta :FP2MAN1
	lda #$80
	sta :FP2MAN2
	lda #$3F
	sta :FP2MAN3
	lda X
	sta :FP1MAN0
	lda X+1
	sta :FP1MAN1
	lda X+2
	sta :FP1MAN2
	lda X+3
	sta :FP1MAN3
	jsr @FADD
	lda :FPMAN0
	sta P
	lda :FPMAN1
	sta P+1
	lda :FPMAN2
	sta P+2
	lda :FPMAN3
	sta P+3

; optimize OK (SYSTEM), line = 975

	lda #$00
	sta I
	sta I+1
	lda #$80
	sta I+2
	lda #$3F
	sta I+3

; --- WhileProlog
	jmp l_02A5
l_02A6

; optimize OK (SYSTEM), line = 978

	lda #$00
	sta :FP2MAN0
	sta :FP2MAN1
	lda #$80
	sta :FP2MAN2
	lda #$3F
	sta :FP2MAN3
	lda I
	sta :FP1MAN0
	lda I+1
	sta :FP1MAN1
	lda I+2
	sta :FP1MAN2
	lda I+3
	sta :FP1MAN3
	jsr @FADD
	lda :FPMAN0
	sta I
	lda :FPMAN1
	sta I+1
	lda :FPMAN2
	sta I+2
	lda :FPMAN3
	sta I+3

; optimize OK (SYSTEM), line = 979

	lda I
	sta :FP2MAN0
	lda I+1
	sta :FP2MAN1
	lda I+2
	sta :FP2MAN2
	lda I+3
	sta :FP2MAN3
	lda X
	sta :FP1MAN0
	lda X+1
	sta :FP1MAN1
	lda X+2
	sta :FP1MAN2
	lda X+3
	sta :FP1MAN3
	jsr @FDIV
	lda :FPMAN0
	sta :FP2MAN0
	lda :FPMAN1
	sta :FP2MAN1
	lda :FPMAN2
	sta :FP2MAN2
	lda :FPMAN3
	sta :FP2MAN3
	lda FRACTION
	sta :FP1MAN0
	lda FRACTION+1
	sta :FP1MAN1
	lda FRACTION+2
	sta :FP1MAN2
	lda FRACTION+3
	sta :FP1MAN3
	jsr @FMUL
	lda :FPMAN0
	sta FRACTION
	lda :FPMAN1
	sta FRACTION+1
	lda :FPMAN2
	sta FRACTION+2
	lda :FPMAN3
	sta FRACTION+3

; optimize OK (SYSTEM), line = 980

	lda P
	sta L
	lda P+1
	sta L+1
	lda P+2
	sta L+2
	lda P+3
	sta L+3

; optimize OK (SYSTEM), line = 981

	lda FRACTION
	sta :FP2MAN0
	lda FRACTION+1
	sta :FP2MAN1
	lda FRACTION+2
	sta :FP2MAN2
	lda FRACTION+3
	sta :FP2MAN3
	lda P
	sta :FP1MAN0
	lda P+1
	sta :FP1MAN1
	lda P+2
	sta :FP1MAN2
	lda P+3
	sta :FP1MAN3
	jsr @FADD
	lda :FPMAN0
	sta P
	lda :FPMAN1
	sta P+1
	lda :FPMAN2
	sta P+2
	lda :FPMAN3
	sta P+3
l_02A5

; optimize OK (SYSTEM), line = 977

	lda P
	sta @FCMPL.A
	lda P+1
	sta @FCMPL.A+1
	lda P+2
	sta @FCMPL.A+2
	lda P+3
	sta @FCMPL.A+3
	lda L
	sta @FCMPL.B
	lda L+1
	sta @FCMPL.B+1
	lda L+2
	sta @FCMPL.B+2
	lda L+3
	sta @FCMPL.B+3
	jsr @FCMPL
	jne l_02A6

; optimize OK (SYSTEM), line = 984

	lda P
	sta RESULT
	lda P+1
	sta RESULT+1
	lda P+2
	sta RESULT+2
	lda P+3
	sta RESULT+3
@exit

; ------------------------------------------------------------

X	= DATAORIGIN+$000B
RESULT	= DATAORIGIN+$000F
P	= DATAORIGIN+$0013
FRACTION	= DATAORIGIN+$0017
I	= DATAORIGIN+$001B
L	= DATAORIGIN+$001F

@VarData	= X
@VarDataSize	= 20

	rts						; ret
.endl
.endl							; overload

.local	FLOATTOSTR					; FUNCTION | ASSEMBLER

; ------------------------------------------------------------

; Generate Assignment for CARDINAL / INTEGER / REAL / SINGLE
; as Pointer
	lda :STACKORIGIN,x
	sta A
	lda :STACKORIGIN+STACKWIDTH,x
	sta A+1
	lda :STACKORIGIN+STACKWIDTH*2,x
	sta A+2
	lda :STACKORIGIN+STACKWIDTH*3,x
	sta A+3
	dex
@main

; -------------------  ASM Block 00000022  -------------------

	txa:pha

	inx		; parameter A

	@ValueToStr #@printREAL

	ldx #$20
	mva:rpl @buf,x adr.Result,x-

	pla:tax

@exit

; ------------------------------------------------------------

; Push WORD / SMALLINT / SHORTREAL / POINTER
; as Pointer

	inx
	mva RESULT :STACKORIGIN,x
	mva RESULT+1 :STACKORIGIN+STACKWIDTH,x

	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	eif

; ------------------------------------------------------------

A	= DATAORIGIN+$0023
adr.RESULT	= [DATAORIGIN+$0027] .array [33]
.var RESULT	= adr.RESULT .word

@VarData	= A
@VarDataSize	= 37

	rts						; ret
.endl

.local	POKE						; PROCEDURE | ASSEMBLER | REGISTER

; ------------------------------------------------------------

; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
; as Pointer
	lda :STACKORIGIN,x
	sta A
	lda :STACKORIGIN+STACKWIDTH,x
	sta A+1
	dex
	jmi @main

; ------------------------------------------------------------

; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
; as Pointer
	lda :STACKORIGIN,x
	sta VALUE
	dex
@main

; -------------------  ASM Block 00000025  -------------------

	ldy #0
	mva value (:edx),y

; ------------------------------------------------------------

A	= :EDX
VALUE	= :ECX

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	MOVE						; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER | INLINE
.local	@03018100001880000188000

	.MACRO m@INLINE

; -------------------  ASM Block 00000034  -------------------

	jsr @move

	.ENDM

; ------------------------------------------------------------

SOURCE	= :EDX
DEST	= :ECX
COUNT	= :EAX

@exit
.endl
.endl							; overload

.local	MOVE						; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER | INLINE
.local	@03018100003000000300000

	.MACRO m@INLINE

; -------------------  ASM Block 00000035  -------------------

	jsr @move

	.ENDM

; ------------------------------------------------------------

SOURCE	= :EDX
DEST	= :ECX
COUNT	= :EAX

@exit
.endl
.endl							; overload

.local	SPACE						; FUNCTION | ASSEMBLER
	sta B

; -------------------  ASM Block 00000038  -------------------

	ldy #0
	lda #' '
	sta:rne @buf,y+

	mva b @buf

	mwa #@buf Result

@exit

; ------------------------------------------------------------

B	= DATAORIGIN+$0048
RESULT	= DATAORIGIN+$0049

@VarData	= B
@VarDataSize	= 1

	rts						; ret
.endl

.local	SETLENGTH					; PROCEDURE | ASSEMBLER | REGISTER

; -------------------  ASM Block 00000040  -------------------

	ldy #0
	mva Len (:edx),y

; ------------------------------------------------------------

S	= :EDX
LEN	= :ECX

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	PAUSE						; PROCEDURE | ASSEMBLER | OVERLOAD
.local	@010181000

; -------------------  ASM Block 00000044  -------------------

loop	lda n
	ora n+1
	beq stop

w1	bit vic_cr1
	bpl w1

w2	bit vic_cr1
	bmi w2

	dew n

	jmp loop
stop

; ------------------------------------------------------------

N	= DATAORIGIN+$004B

@VarData	= N
@VarDataSize	= 2

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl
.endl							; overload

.local	RANDOMIZE					; PROCEDURE | ASSEMBLER

; -------------------  ASM Block 00000045  -------------------

	mva $d20a RndSeed
	mva #$00  RndSeed+1

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	RANDOMF						; FUNCTION

; -------------------  ASM Block 00000047  -------------------

	lda $DC04	//CIA#1 Timer A Lo byte
	eor $DC05	//CIA#1 Timer A Hi byte
	eor $DD04	//CIA#2 Timer A Lo byte
	sta Result+1

	adc $DD05	//CIA#2 Timer A Hi byte
	eor $DD06	//CIA#2 Timer B Lo byte
	eor $DD07	//CIA#2 Timer B Hi byte
	and #$7f
	sta Result+2

	lda #$00
	sta Result
	lda #$3f
	sta Result+3
 
; optimize OK (system_c64.inc), line = 107

	lda RESULT
	sta :FP2MAN0
	lda RESULT+1
	sta :FP2MAN1
	lda RESULT+2
	sta :FP2MAN2
	lda RESULT+3
	sta :FP2MAN3
	lda #$00
	sta :FP1MAN0
	sta :FP1MAN1
	lda #$80
	sta :FP1MAN2
	lda #$3F
	sta :FP1MAN3
	jsr @FSUB
	lda :FPMAN0
	sta RESULT
	lda :FPMAN1
	sta RESULT+1
	lda :FPMAN2
	sta RESULT+2
	lda :FPMAN3
	sta RESULT+3
@exit

; ------------------------------------------------------------

RESULT	= DATAORIGIN+$004D

	rts						; ret
.endl

; ------------------------------------------------------------
; ------------------------------------------------------------
@UnitInit

	rts

; ------------------------------------------------------------

M_PI_2	= $0648
D_PI_2	= $0192
D_PI_180	= $04
FMOPENREAD	= $04
FMOPENWRITE	= $08
FMOPENAPPEND	= $09
FMOPENREADWRITE	= $0C
DATESEPARATOR	= DATAORIGIN+$0000
FILEMODE	= DATAORIGIN+$0001
GRAPHMODE	= DATAORIGIN+$0002
IORESULT	= DATAORIGIN+$0003
EOLN	= DATAORIGIN+$0004
SCREENWIDTH	= DATAORIGIN+$0005
SCREENHEIGHT	= DATAORIGIN+$0007
adr.MEM	= $00
.var MEM	= adr.MEM .word
RNDSEED	= DATAORIGIN+$0009

.endl							; UNIT SYSTEM

; ------------------------------------------------------------

.local	CRT						; UNIT

.local	CLRSCR						; PROCEDURE

; -------------------  ASM Block 00000060  -------------------

	jsr @ClrScr
 
@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	READKEY						; FUNCTION | ASSEMBLER

; -------------------  ASM Block 00000061  -------------------

getkey	lda $cb
	cmp #$40
	beq getkey

	scc
	eor #%00100000

	sta Result

@exit

; ------------------------------------------------------------

RESULT	= DATAORIGIN+$0051

	rts						; ret
.endl

.local	KEYPRESSED					; FUNCTION | ASSEMBLER

; -------------------  ASM Block 00000065  -------------------

	txa:pha

	jsr $F142
	sta $cb

	seq
	lda #1
	sta Result

	pla:tax

@exit

; ------------------------------------------------------------

RESULT	= DATAORIGIN+$0052

	rts						; ret
.endl

.local	GOTOXY						; PROCEDURE | ASSEMBLER

; -------------------  ASM Block 00000066  -------------------

	txa:pha
	clc

	ldx y
	seq
	dex

	ldy x
	seq
	dey

	jsr $FFF0	; PLOT

	pla:tax

; ------------------------------------------------------------

X	= DATAORIGIN+$0053
Y	= DATAORIGIN+$0054

@VarData	= X
@VarDataSize	= 2

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	WHEREX						; FUNCTION | ASSEMBLER

; -------------------  ASM Block 00000067  -------------------

	txa:pha
	sec

	jsr $FFF0	; PLOT
	iny
	sty Result

	pla:tax

@exit

; ------------------------------------------------------------

RESULT	= DATAORIGIN+$0055

	rts						; ret
.endl

.local	WHEREY						; FUNCTION | ASSEMBLER

; -------------------  ASM Block 00000068  -------------------

	txa:pha
	sec

	jsr $FFF0	; PLOT
	inx
	stx Result

	pla:tax

@exit

; ------------------------------------------------------------

RESULT	= DATAORIGIN+$0056

	rts						; ret
.endl

; ------------------------------------------------------------

BLACK	= $00
WHITE	= $01
RED	= $02
CYAN	= $03
PURPLE	= $04
GREEN	= $05
BLUE	= $06
YELLOW	= $07
ORANGE	= $08
BROWN	= $09
LIGHT_RED	= $0A
DARK_GREY	= $0B
GREY	= $0C
LIGHT_GREEN	= $0D
LIGHT_BLUE	= $0E
LIGHT_GREY	= $0F
BW40	= $00
CO40	= $01
BW80	= $02
CO80	= $03
MONO	= $07
C40	= $01
C80	= $03
BLINK	= $80

.endl							; UNIT CRT

; ------------------------------------------------------------

.local	DOS						; UNIT

; ------------------------------------------------------------

PALNTSC	= $D014

.endl							; UNIT DOS

; ------------------------------------------------------------

.local	STRUTILS					; UNIT

; ------------------------------------------------------------

.endl							; UNIT STRUTILS

; ------------------------------------------------------------

.local	SYSUTILS					; UNIT

.local	BYTETOSTR					; FUNCTION | ASSEMBLER
	sta A

; -------------------  ASM Block 00000081  -------------------

	txa:pha

	lda a
	ldy #$2f
	ldx #$3a
	sec
@	iny
	sbc #100
	bcs @-
@	dex
	adc #10
	bmi @-
	adc #$2f

	sta adr.Result+3
	stx adr.Result+2
	sty adr.Result+1

	ldy #3
lp	cpy #1
	beq skp
	lda adr.Result+1
	cmp #$30
	bne skp

	lda adr.Result+2
	sta adr.Result+1
	lda adr.Result+3
	sta adr.Result+2

	dey
	bne lp

skp	sty adr.Result

	pla:tax

@exit

; ------------------------------------------------------------

A	= DATAORIGIN+$0057
adr.RESULT	= [DATAORIGIN+$0058] .array [33]
.var RESULT	= adr.RESULT .word

@VarData	= A
@VarDataSize	= 34

	rts						; ret
.endl

.local	INTTOSTR					; FUNCTION | ASSEMBLER | OVERLOAD
.local	@010182000

; ------------------------------------------------------------

; Generate Assignment for CARDINAL / INTEGER / REAL / SINGLE
; as Pointer
	lda :STACKORIGIN,x
	sta A
	lda :STACKORIGIN+STACKWIDTH,x
	sta A+1
	lda :STACKORIGIN+STACKWIDTH*2,x
	sta A+2
	lda :STACKORIGIN+STACKWIDTH*3,x
	sta A+3
	dex
@main

; -------------------  ASM Block 00000083  -------------------

	txa:pha

	inx

	@ValueToStr #@printCARD

	ldx #$20
	mva:rpl @buf,x adr.Result,x-

	pla:tax

@exit

; ------------------------------------------------------------

; Push WORD / SMALLINT / SHORTREAL / POINTER
; as Pointer

	inx
	mva RESULT :STACKORIGIN,x
	mva RESULT+1 :STACKORIGIN+STACKWIDTH,x

	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	eif

; ------------------------------------------------------------

A	= DATAORIGIN+$0079
adr.RESULT	= [DATAORIGIN+$007D] .array [33]
.var RESULT	= adr.RESULT .word

@VarData	= A
@VarDataSize	= 37

	rts						; ret
.endl
.endl							; overload

.local	STRTOINT					; FUNCTION | ASSEMBLER | OVERLOAD
.local	@010286000
	sta S

; -------------------  ASM Block 00000084  -------------------

	mva s @buf+1
	mva #1 @buf

	@StrToInt #@buf

	mva edx Result

@exit

; ------------------------------------------------------------

S	= DATAORIGIN+$009E
RESULT	= DATAORIGIN+$009F

@VarData	= S
@VarDataSize	= 1

	rts						; ret
.endl
.endl							; overload

.local	INTTOHEX					; FUNCTION | ASSEMBLER | REGISTER

; -------------------  ASM Block 00000088  -------------------

	jsr @hexStr

;	@move #@buf Result #33
	ldy #256-33
	mva:rne @buf+33-256,y adr.Result+33-256,y+

@exit

; ------------------------------------------------------------

VALUE	= :EDX
DIGITS	= :ECX
adr.RESULT	= [DATAORIGIN+$00A0] .array [33]
.var RESULT	= adr.RESULT .word

@VarData	= RESULT
@VarDataSize	= 33

	rts						; ret
.endl

; ------------------------------------------------------------

FAREADONLY	= $01
FAHIDDEN	= $02
FASYSFILE	= $04
FAVOLUMEID	= $08
FADIRECTORY	= $10
FAARCHIVE	= $20
FAANYFILE	= $3F

.endl							; UNIT SYSUTILS

; ------------------------------------------------------------

.local	C64						; UNIT

; ------------------------------------------------------------

SPRITE0X	= $D000
SPRITE0Y	= $D001
SPRITE1X	= $D002
SPRITE1Y	= $D003
SPRITE2X	= $D004
SPRITE2Y	= $D005
SPRITE3X	= $D006
SPRITE3Y	= $D007
SPRITE4X	= $D008
SPRITE4Y	= $D009
SPRITE5X	= $D00A
SPRITE5Y	= $D00B
SPRITE6X	= $D00C
SPRITE6Y	= $D00D
SPRITE7X	= $D00E
SPRITE7Y	= $D00F
SPRITESXMSB	= $D010
CONTROLREGISTER1	= $D011
RASTERCOUNTER	= $D012
LIGHTPENX	= $D013
LIGHTPENY	= $D014
ENABLESPRITES	= $D015
CONTROLREGISTER2	= $D016
SPRITEYEXPANSION	= $D017
MEMORYPOINTERS	= $D018
INTERRUPTREGISTER	= $D019
INTERRUPTENABLED	= $D01A
SPRITEDATAPRIORITY	= $D01B
SPRITEMULTICOLOR	= $D01C
SPRITEXEXPANSION	= $D01D
SPRITESPRITECOLLISION	= $D01E
SPRITEDATACOLLISION	= $D01F
BORDERCOLOR	= $D020
BACKGROUNDCOLOR0	= $D021
BACKGROUNDCOLOR1	= $D022
BACKGROUNDCOLOR2	= $D023
BACKGROUNDCOLOR3	= $D024
SPRITEMULTICOLOR0	= $D025
SPRITEMULTICOLOR1	= $D026
SPRITE0COLOR	= $D027
SPRITE1COLOR	= $D028
SPRITE2COLOR	= $D029
SPRITE3COLOR	= $D02A
SPRITE4COLOR	= $D02B
SPRITE5COLOR	= $D02C
SPRITE6COLOR	= $D02D
SPRITE7COLOR	= $D02E
D6510	= $00
R6510	= $01
PRA2	= $DD00
SP0X	= $D000
SP0Y	= $D001
SP1X	= $D002
SP1Y	= $D003
SP2X	= $D004
SP2Y	= $D005
SP3X	= $D006
SP3Y	= $D007
SP4X	= $D008
SP4Y	= $D009
SP5X	= $D00A
SP5Y	= $D00B
SP6X	= $D00C
SP6Y	= $D00D
SP7X	= $D00E
SP7Y	= $D00F
MSIGX	= $D010
SCROLY	= $D011
VICCR1	= $D011
RASTER	= $D012
LPENX	= $D013
LPENY	= $D014
SPENA	= $D015
SCROLX	= $D016
VICCR2	= $D016
YXPAND	= $D017
VMCSB	= $D018
VICIRQ	= $D019
IRQMASK	= $D01A
SPBGPR	= $D01B
SPMC	= $D01C
XXPAND	= $D01D
SPSPCL	= $D01E
SPBGCL	= $D01F
EXTCOL	= $D020
BGCOL0	= $D021
BGCOL1	= $D022
BGCOL2	= $D023
BGCOL3	= $D024
SPMC0	= $D025
SPMC1	= $D026
SP0COL	= $D027
SP1COL	= $D028
SP2COL	= $D029
SP3COL	= $D02A
SP4COL	= $D02B
SP5COL	= $D02C
SP6COL	= $D02D
SP7COL	= $D02E
FRELO1	= $D400
FREHI1	= $D401
PWLO1	= $D402
PWHI1	= $D403
VCREG1	= $D404
ATDCY1	= $D405
SUREL1	= $D406
FRELO2	= $D407
FREHI2	= $D408
PWLO2	= $D409
PWHI2	= $D40A
VCREG2	= $D40B
ATDCY2	= $D40C
SUREL2	= $D40D
FRELO3	= $D40E
FREHI3	= $D40F
PWLO3	= $D410
PWHI3	= $D411
VCREG3	= $D412
ATDCY3	= $D413
SUREL3	= $D414
CUTLO	= $D415
CUTHI	= $D416
RESON	= $D417
SIGVOL	= $D418
POTX	= $D419
POTY	= $D41A
RANDOM	= $D41B
ENV3	= $D41C
COLORRAM	= $D800
CIAPRA	= $DC00
CIAPRB	= $DC01
CIDDRA	= $DC02
CIDDRB	= $DC03
TIMALO	= $DC04
TIMAHI	= $DC05
TIMBLO	= $DC06
TIMBHI	= $DC07
TODTEN	= $DC08
TODSEC	= $DC09
TODMIN	= $DC0A
TODHRS	= $DC0B
CIASDR	= $DC0C
CIAICR	= $DC0D
CIACRA	= $DC0E
CIACRB	= $DC0F
CI2PRA	= $DD00
CI2PRB	= $DD01
C2DDRA	= $DD02
C2DDRB	= $DD03
TI2ALO	= $DD04
TI2AHI	= $DD05
TI2BLO	= $DD06
TI2BHI	= $DD07
TO2TEN	= $DD08
TO2SEC	= $DD09
TO2MIN	= $DD0A
TO2HRS	= $DD0B
CI2SDR	= $DD0C
CI2ICR	= $DD0D
CI2CRA	= $DD0E
CI2CRB	= $DD0F
NMIADL	= $FFFA
NMIADH	= $FFFB
RSTADL	= $FFFC
RSTADH	= $FFFD
IRQADL	= $FFFE
IRQADH	= $FFFF

.endl							; UNIT C64

; ------------------------------------------------------------

.local	MATH						; UNIT

.local	MIN						; FUNCTION | OVERLOAD
.local	@0201840000184000

; optimize OK (MATH), line = 352

	lda X
	cmp Y
	lda X+1
	sbc Y+1
	svc
	eor #$80
	jpl l_03C8
	lda X
	sta RESULT
	lda X+1
	jmp l_03D7
l_03C8
	lda Y
	sta RESULT
	lda Y+1
l_03D7
	sta RESULT+1
@exit

; ------------------------------------------------------------

X	= DATAORIGIN+$00C1
Y	= DATAORIGIN+$00C3
RESULT	= DATAORIGIN+$00C5

@VarData	= X
@VarDataSize	= 4

	rts						; ret
.endl
.endl							; overload

.local	MAX						; FUNCTION | OVERLOAD
.local	@0201840000184000

; optimize OK (MATH), line = 412

	lda Y
	cmp X
	lda Y+1
	sbc X+1
	svc
	eor #$80
	jpl l_03F7
	lda X
	sta RESULT
	lda X+1
	jmp l_0406
l_03F7
	lda Y
	sta RESULT
	lda Y+1
l_0406
	sta RESULT+1
@exit

; ------------------------------------------------------------

X	= DATAORIGIN+$00C7
Y	= DATAORIGIN+$00C9
RESULT	= DATAORIGIN+$00CB

@VarData	= X
@VarDataSize	= 4

	rts						; ret
.endl
.endl							; overload

; ------------------------------------------------------------

.endl							; UNIT MATH

; ------------------------------------------------------------

.local	STRINGUTILS					; UNIT

.local	STRCAT						; FUNCTION | OVERLOAD
.local	@020189860000010001898600000100
	dex
	jmi @main
	dex
@main

; optimize OK (STRINGUTILS), line = 225

	lda R
	sta SYSTEM.SETLENGTH.S
	lda R+1
	sta SYSTEM.SETLENGTH.S+1
	lda #$00
	sta SYSTEM.SETLENGTH.LEN
	jsr SYSTEM.SETLENGTH

; optimize OK (STRINGUTILS), line = 226

	lda adr.S1
	sta L1

; optimize OK (STRINGUTILS), line = 227

	lda adr.S2
	sta L2

; optimize OK (STRINGUTILS), line = 229

	lda S1
	sta @move.src
	lda S1+1
	sta @move.src+1
	@moveSTRING R #255

; optimize OK (STRINGUTILS), line = 230

	lda #$01
	sta I

l_045F
; --- ForToDoCondition
	lda I
	cmp L2
	scc
	jne l_046D
	add L1
	sta :STACKORIGIN+9
	ldy I
	lda adr.S2,y
	ldy :STACKORIGIN+9
	sta adr.R,y

; --- ForToDoEpilog
	inc I
	jne l_045F
l_046D

; optimize OK (STRINGUTILS), line = 231

	lda L1
	add L2
	sta adr.R

; optimize OK (STRINGUTILS), line = 232

	lda R
	sta @move.src
	lda R+1
	sta @move.src+1
	@moveSTRING RESULT #255
@exit

; ------------------------------------------------------------

adr.S1	= [DATAORIGIN+$00CD] .array [256]
.var S1	= adr.S1 .word
adr.S2	= [DATAORIGIN+$01CD] .array [256]
.var S2	= adr.S2 .word
adr.RESULT	= [DATAORIGIN+$02CD] .array [256]
.var RESULT	= adr.RESULT .word
L1	= DATAORIGIN+$03CD
L2	= DATAORIGIN+$03CE
I	= DATAORIGIN+$03CF
adr.R	= [DATAORIGIN+$03D0] .array [256]
.var R	= adr.R .word

@VarData	= S1
@VarDataSize	= 1027

	rts						; ret
.endl
.endl							; overload

; ------------------------------------------------------------

.endl							; UNIT STRINGUTILS

; ------------------------------------------------------------

.local	KERNAL						; UNIT

.local	KERNALSETNAM					; FUNCTION | ASSEMBLER | OVERLOAD
.local	@0101898600000011

; ------------------------------------------------------------

; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
; as Pointer
	lda :STACKORIGIN,x
	sta :bp2
	lda :STACKORIGIN+STACKWIDTH,x
	sta :bp2+1
	ldy #$10
	mva:rpl (:bp2),y adr.ARG,y-
	dex
@main

; -------------------  ASM Block 00000092  -------------------

        txa:pha
        lda adr.arg         ; load filename length
        ldx <adr.arg+1      ; load filename first byte address
        Ldy >adr.arg+1
        jsr KERNAL_SETNAM   ; call SETNAM
        bcs error           ; carry set? branch to error
        lda #$01            ; otherwise return true
    close:
        sta Result
        pla:tax
        rts       
    error:  
        sta lastError       ; store accumulator in lastError
        lda #$00            ; return false
        jmp close

@exit

; ------------------------------------------------------------

adr.ARG	= [DATAORIGIN+$04D1] .array [17]
.var ARG	= adr.ARG .word
RESULT	= DATAORIGIN+$04E2

@VarData	= ARG
@VarDataSize	= 17

	rts						; ret
.endl
.endl							; overload

.local	KERNALSETLFS					; FUNCTION | ASSEMBLER

; -------------------  ASM Block 00000094  -------------------

        txa:pha
        lda fd            ; set parameters
        ldx device            
        ldy secondary
        jsr KERNAL_SETLFS          ; call SETLFS
        bcs error           ; carry set? branch to error
        lda #$01            ; otherwise return true
    close:
        sta Result
        pla:tax
        rts       
    error:  
        sta lastError       ; store accumulator in lastError
        lda #$00            ; return false
        jmp close

@exit

; ------------------------------------------------------------

FD	= DATAORIGIN+$04E3
DEVICE	= DATAORIGIN+$04E4
SECONDARY	= DATAORIGIN+$04E5
RESULT	= DATAORIGIN+$04E6

@VarData	= FD
@VarDataSize	= 3

	rts						; ret
.endl

.local	KERNALOPEN					; FUNCTION | ASSEMBLER

; -------------------  ASM Block 00000095  -------------------

        txa:pha
        jsr KERNAL_OPEN     ; call OPEN
        bcs error           ; carry set? branch to error
        lda #$01            ; otherwise return true
    close:
        sta Result
        pla:tax
        rts       
    error:  
        sta lastError       ; store accumulator in lastError
        lda #$00            ; return false
        jmp close

@exit

; ------------------------------------------------------------

RESULT	= DATAORIGIN+$04E7

	rts						; ret
.endl

.local	KERNALCHKIN					; PROCEDURE | ASSEMBLER
	sta FD

; -------------------  ASM Block 00000096  -------------------

        txa:pha
        ldx fd
        jsr KERNAL_CHKIN     ; call CHKIN
        pla:tax

; ------------------------------------------------------------

FD	= DATAORIGIN+$04E8

@VarData	= FD
@VarDataSize	= 1

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	KERNALCHKOUT					; PROCEDURE | ASSEMBLER
	sta FD

; -------------------  ASM Block 00000097  -------------------

        txa:pha
        ldx fd
        jsr KERNAL_CHKOUT     ; call CHKOUT
        pla:tax

; ------------------------------------------------------------

FD	= DATAORIGIN+$04E9

@VarData	= FD
@VarDataSize	= 1

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	KERNALREADST					; FUNCTION | ASSEMBLER

; -------------------  ASM Block 00000098  -------------------

        txa:pha
        jsr KERNAL_READST     ; call READST
        sta Result
        pla:tax

@exit

; ------------------------------------------------------------

RESULT	= DATAORIGIN+$04EA

	rts						; ret
.endl

.local	KERNALCHRIN					; FUNCTION | ASSEMBLER

; -------------------  ASM Block 00000099  -------------------

        txa:pha
        jsr KERNAL_CHRIN     ; call CHRIN
        sta Result
        pla:tax

@exit

; ------------------------------------------------------------

RESULT	= DATAORIGIN+$04EB

	rts						; ret
.endl

.local	KERNALCHROUT					; FUNCTION | ASSEMBLER
	sta C

; -------------------  ASM Block 00000100  -------------------

        txa:pha
        lda c
        jsr KERNAL_CHROUT     ; call CHROUT
        pla:tax

@exit

; ------------------------------------------------------------

C	= DATAORIGIN+$04EC
RESULT	= DATAORIGIN+$04ED

@VarData	= C
@VarDataSize	= 1

	rts						; ret
.endl

.local	KERNALCLOSE					; FUNCTION | ASSEMBLER
	sta FD

; -------------------  ASM Block 00000101  -------------------

        txa:pha
        lda fd
        jsr KERNAL_CLOSE     ; call CLOSE
        bcs error           ; carry set? branch to error
        lda #$01            ; otherwise return true
    close:
        sta Result
        pla:tax
        rts       
    error:  
        sta lastError       ; store accumulator in lastError
        lda #$00            ; return false
        jmp close

@exit

; ------------------------------------------------------------

FD	= DATAORIGIN+$04EE
RESULT	= DATAORIGIN+$04EF

@VarData	= FD
@VarDataSize	= 1

	rts						; ret
.endl

.local	KERNALCLRCHN					; PROCEDURE | ASSEMBLER

; -------------------  ASM Block 00000102  -------------------

        txa:pha
        jsr KERNAL_CLRCHN     ; call CLRCHN
        pla:tax

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	SAVEBYTES					; PROCEDURE
	dex
	jmi @main

; ------------------------------------------------------------

; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
; as Pointer
	lda :STACKORIGIN,x
	sta DEVICE
	dex
	jmi @main

; ------------------------------------------------------------

; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
; as Pointer
	lda :STACKORIGIN,x
	sta SOURCE
	lda :STACKORIGIN+STACKWIDTH,x
	sta SOURCE+1
	dex
	jmi @main

; ------------------------------------------------------------

; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
; as Pointer
	lda :STACKORIGIN,x
	sta SIZE
	lda :STACKORIGIN+STACKWIDTH,x
	sta SIZE+1
	dex
@main

; optimize OK (KERNAL), line = 314

	lda #$00
	sta I
	sta I+1

; optimize FAIL ('KERNALSETNAM.@0101898600000011', KERNAL), line = 315

	inx
	mva FILENAME :STACKORIGIN,x
	mva FILENAME+1 :STACKORIGIN+STACKWIDTH,x
	jsr KERNALSETNAM.@0101898600000011

; optimize OK (KERNAL), line = 316

	lda #$01
	sta KERNALSETLFS.FD
	lda DEVICE
	sta KERNALSETLFS.DEVICE
	lda #$09
	sta KERNALSETLFS.SECONDARY
	jsr KERNALSETLFS

; optimize FAIL ('KERNALOPEN', KERNAL), line = 317

	jsr KERNALOPEN
	lda KERNALOPEN.RESULT
	jeq l_04EB

; optimize OK (KERNAL), line = 319

	lda #$01
	jsr KERNALCHKOUT

; optimize OK (KERNAL), line = 320

	lda #$00
	sta I
	sta I+1
	lda SIZE
	sub #$01
	sta @FORTMP_04F9_0
	lda SIZE+1
	sbc #$00
	sta @FORTMP_04F9_1

l_04FC
; --- ForToDoCondition
	lda @FORTMP_04F9_1::#$00
	cmp I+1
	bne @+
	lda @FORTMP_04F9_0::#$00
	cmp I
@
	jcc l_0508

; optimize FAIL ('KERNALREADST', KERNAL), line = 322

	jsr KERNALREADST
	lda KERNALREADST.RESULT
	jeq l_0518
	jmp b_04FC
l_0518

; optimize OK (KERNAL), line = 325

	lda SOURCE
	add I
	tay
	lda SOURCE+1
	adc I+1
	sta :bp+1
	lda (:bp),y
	jsr KERNALCHROUT

; --- ForToDoEpilog
	inc I
	jne l_04FC
	inc I+1
	jne l_04FC
l_0508
b_04FC
l_04EB

; optimize OK (KERNAL), line = 329

	lda #$01
	jsr KERNALCLOSE

; optimize FAIL ('KERNALCLRCHN', KERNAL), line = 330

	jsr KERNALCLRCHN

; ------------------------------------------------------------

adr.FILENAME	= [DATAORIGIN+$04F0] .array [17]
.var FILENAME	= adr.FILENAME .word
DEVICE	= DATAORIGIN+$0501
SOURCE	= DATAORIGIN+$0502
SIZE	= DATAORIGIN+$0504
I	= DATAORIGIN+$0506

@VarData	= FILENAME
@VarDataSize	= 24

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	LOADBYTES					; PROCEDURE
	dex
	jmi @main

; ------------------------------------------------------------

; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
; as Pointer
	lda :STACKORIGIN,x
	sta DEVICE
	dex
	jmi @main

; ------------------------------------------------------------

; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
; as Pointer
	lda :STACKORIGIN,x
	sta DEST
	lda :STACKORIGIN+STACKWIDTH,x
	sta DEST+1
	dex
@main

; optimize OK (KERNAL), line = 338

	lda #$00
	sta I
	sta I+1

; optimize FAIL ('KERNALSETNAM.@0101898600000011', KERNAL), line = 339

	inx
	mva FILENAME :STACKORIGIN,x
	mva FILENAME+1 :STACKORIGIN+STACKWIDTH,x
	jsr KERNALSETNAM.@0101898600000011

; optimize OK (KERNAL), line = 340

	lda #$01
	sta KERNALSETLFS.FD
	lda DEVICE
	sta KERNALSETLFS.DEVICE
	lda #$09
	sta KERNALSETLFS.SECONDARY
	jsr KERNALSETLFS

; optimize FAIL ('KERNALOPEN', KERNAL), line = 341

	jsr KERNALOPEN
	lda KERNALOPEN.RESULT
	jeq l_054E

; optimize OK (KERNAL), line = 343

	lda #$01
	jsr KERNALCHKIN

; --- WhileProlog
	jmp l_0553
l_0554

; optimize FAIL ('KERNALCHRIN', KERNAL), line = 346

	jsr KERNALCHRIN
	inx
	mva KERNALCHRIN.RESULT :STACKORIGIN,x
	inx
	lda DEST
	add I
	sta :STACKORIGIN,x
	lda DEST+1
	adc I+1
	sta :STACKORIGIN+STACKWIDTH,x
	jsr SYSTEM.POKE

; optimize FAIL (0, KERNAL), line = 347

	inc I
	sne
	inc I+1
l_0553

; optimize FAIL ('KERNALREADST', KERNAL), line = 344

	jsr KERNALREADST
	lda KERNALREADST.RESULT
	jeq l_0554
l_054E

; optimize OK (KERNAL), line = 350

	lda #$01
	jsr KERNALCLOSE

; optimize FAIL ('KERNALCLRCHN', KERNAL), line = 351

	jsr KERNALCLRCHN

; ------------------------------------------------------------

adr.FILENAME	= [DATAORIGIN+$050A] .array [17]
.var FILENAME	= adr.FILENAME .word
DEVICE	= DATAORIGIN+$051B
DEST	= DATAORIGIN+$051C
I	= DATAORIGIN+$051E
B	= DATAORIGIN+$0520

@VarData	= FILENAME
@VarDataSize	= 23

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

; ------------------------------------------------------------

KERNAL_SETNAM	= $FFBD
KERNAL_SETLFS	= $FFBA
KERNAL_OPEN	= $FFC0
KERNAL_CLOSE	= $FFC3
KERNAL_CLRCHN	= $FFCC
KERNAL_LOAD	= $FFD5
KERNAL_LISTEN	= $FFB1
KERNAL_SECOND	= $FF93
KERNAL_UNLSN	= $FFAE
KERNAL_TALK	= $FFB4
KERNAL_TKSA	= $FF96
KERNAL_ACPTR	= $FFA5
KERNAL_CHROUT	= $FFD2
KERNAL_UNTLK	= $FFAB
KERNAL_CHKIN	= $FFC6
KERNAL_CHKOUT	= $FFC9
KERNAL_READST	= $FFB7
KERNAL_CHRIN	= $FFCF
KERNAL_SAVE	= $FFD8
KERNAL_PLOT	= $FFD8
LASTERROR	= DATAORIGIN+$04D0

.endl							; UNIT KERNAL

; ------------------------------------------------------------

.local	NEURALNET					; UNIT

.local	SIGMOID						; FUNCTION

; optimize FAIL (2, NEURALNET), line = 106

	inx
	mva #$00 :STACKORIGIN,x
	sta :STACKORIGIN+STACKWIDTH,x
	mva #$80 :STACKORIGIN+STACKWIDTH*2,x
	mva #$3F :STACKORIGIN+STACKWIDTH*3,x
	inx
	mva #$00 :STACKORIGIN,x
	sta :STACKORIGIN+STACKWIDTH,x
	mva #$80 :STACKORIGIN+STACKWIDTH*2,x
	mva #$3F :STACKORIGIN+STACKWIDTH*3,x
	lda ARG
	sta SYSTEM.EXP.@01018F000.X
	lda ARG+1
	sta SYSTEM.EXP.@01018F000.X+1
	lda ARG+2
	sta SYSTEM.EXP.@01018F000.X+2
	lda ARG+3
	eor #$80
	sta SYSTEM.EXP.@01018F000.X+3
	jsr SYSTEM.EXP.@01018F000
	inx
	lda SYSTEM.EXP.@01018F000.RESULT
	sta :FP2MAN0
	lda SYSTEM.EXP.@01018F000.RESULT+1
	sta :FP2MAN1
	lda SYSTEM.EXP.@01018F000.RESULT+2
	sta :FP2MAN2
	lda SYSTEM.EXP.@01018F000.RESULT+3
	sta :FP2MAN3
	lda :STACKORIGIN-1,x
	sta :FP1MAN0
	lda :STACKORIGIN-1+STACKWIDTH,x
	sta :FP1MAN1
	lda :STACKORIGIN-1+STACKWIDTH*2,x
	sta :FP1MAN2
	lda :STACKORIGIN-1+STACKWIDTH*3,x
	sta :FP1MAN3
	jsr @FADD
	dex
	lda :FPMAN0
	sta :FP2MAN0
	lda :FPMAN1
	sta :FP2MAN1
	lda :FPMAN2
	sta :FP2MAN2
	lda :FPMAN3
	sta :FP2MAN3
	lda :STACKORIGIN-1,x
	sta :FP1MAN0
	lda :STACKORIGIN-1+STACKWIDTH,x
	sta :FP1MAN1
	lda :STACKORIGIN-1+STACKWIDTH*2,x
	sta :FP1MAN2
	lda :STACKORIGIN-1+STACKWIDTH*3,x
	sta :FP1MAN3
	jsr @FDIV
	dex
	lda :FPMAN0
	sta RESULT
	lda :FPMAN1
	sta RESULT+1
	lda :FPMAN2
	sta RESULT+2
	lda :FPMAN3
	sta RESULT+3
	dex
@exit

; ------------------------------------------------------------

ARG	= DATAORIGIN+$4076
RESULT	= DATAORIGIN+$407A

@VarData	= ARG
@VarDataSize	= 4

	rts						; ret
.endl

.local	SIGMOIDPRIM					; FUNCTION

; optimize OK (NEURALNET), line = 111

	lda ARG
	sta :FP2MAN0
	lda ARG+1
	sta :FP2MAN1
	lda ARG+2
	sta :FP2MAN2
	lda ARG+3
	sta :FP2MAN3
	lda #$00
	sta :FP1MAN0
	sta :FP1MAN1
	lda #$80
	sta :FP1MAN2
	lda #$3F
	sta :FP1MAN3
	jsr @FSUB
	lda :FPMAN0
	sta :FP2MAN0
	lda :FPMAN1
	sta :FP2MAN1
	lda :FPMAN2
	sta :FP2MAN2
	lda :FPMAN3
	sta :FP2MAN3
	lda ARG
	sta :FP1MAN0
	lda ARG+1
	sta :FP1MAN1
	lda ARG+2
	sta :FP1MAN2
	lda ARG+3
	sta :FP1MAN3
	jsr @FMUL
	lda :FPMAN0
	sta RESULT
	lda :FPMAN1
	sta RESULT+1
	lda :FPMAN2
	sta RESULT+2
	lda :FPMAN3
	sta RESULT+3
@exit

; ------------------------------------------------------------

ARG	= DATAORIGIN+$407E
RESULT	= DATAORIGIN+$4082

@VarData	= ARG
@VarDataSize	= 4

	rts						; ret
.endl

.local	INITNETWORK					; PROCEDURE

; optimize OK (NEURALNET), line = 118

	lda #$00
	sta I
	sta I+1

l_05A2
; --- ForToDoCondition
	lda I+1
	cmp #$0D
	bcc @+
	jne l_05AE
	lda I
	cmp #$FF
	bcc @+
	jne l_05AE
@

; optimize FAIL (1, NEURALNET), line = 119

	inx
	mva I :STACKORIGIN,x
	lda I+1
	asl :STACKORIGIN,x
	rol @
	asl :STACKORIGIN,x
	rol @
	sta :STACKORIGIN+STACKWIDTH,x
	jsr SYSTEM.RANDOMF
	inx
	inx
	lda #$00
	sta :FP2MAN0
	lda #$00
	sta :FP2MAN1
	lda #$00
	sta :FP2MAN2
	lda #$40
	sta :FP2MAN3
	lda SYSTEM.RANDOMF.RESULT
	sta :FP1MAN0
	lda SYSTEM.RANDOMF.RESULT+1
	sta :FP1MAN1
	lda SYSTEM.RANDOMF.RESULT+2
	sta :FP1MAN2
	lda SYSTEM.RANDOMF.RESULT+3
	sta :FP1MAN3
	jsr @FMUL
	lda :FPMAN0
	sta :STACKORIGIN-1,x
	lda :FPMAN1
	sta :STACKORIGIN-1+STACKWIDTH,x
	lda :FPMAN2
	sta :STACKORIGIN-1+STACKWIDTH*2,x
	lda :FPMAN3
	sta :STACKORIGIN-1+STACKWIDTH*3,x
	lda #$00
	sta :FP2MAN0
	lda #$00
	sta :FP2MAN1
	lda #$00
	sta :FP2MAN2
	lda #$3F
	sta :FP2MAN3
	lda :STACKORIGIN-1,x
	sta :FP1MAN0
	lda :STACKORIGIN-1+STACKWIDTH,x
	sta :FP1MAN1
	lda :STACKORIGIN-1+STACKWIDTH*2,x
	sta :FP1MAN2
	lda :STACKORIGIN-1+STACKWIDTH*3,x
	sta :FP1MAN3
	jsr @FSUB
	lda :FPMAN0
	sta :STACKORIGIN-1,x
	lda :FPMAN1
	sta :STACKORIGIN-1+STACKWIDTH,x
	lda :FPMAN2
	sta :STACKORIGIN-1+STACKWIDTH*2,x
	lda :FPMAN3
	sta :STACKORIGIN-1+STACKWIDTH*3,x
	dex
	lda WEIGHTSHIDDEN
	add :STACKORIGIN-1,x
	sta :bp2
	lda WEIGHTSHIDDEN+1
	adc :STACKORIGIN-1+STACKWIDTH,x
	sta :bp2+1
	ldy #$00
	lda :STACKORIGIN,x
	sta (:bp2),y
	iny
	lda :STACKORIGIN+STACKWIDTH,x
	sta (:bp2),y
	iny
	lda :STACKORIGIN+STACKWIDTH*2,x
	sta (:bp2),y
	iny
	lda :STACKORIGIN+STACKWIDTH*3,x
	sta (:bp2),y
	dex
	dex

; --- ForToDoEpilog
	inc I
	jne l_05A2
	inc I+1
	jne l_05A2
l_05AE

; optimize OK (NEURALNET), line = 120

	lda #$00
	sta I
	sta I+1

l_05CA
; --- ForToDoCondition
	lda I
	cmp #$0E
	jcs l_05D8

; optimize OK (NEURALNET), line = 121

	asl @
	asl @
	tay
	lda #$00
	sta adr.BIASESHIDDEN,y
	sta adr.BIASESHIDDEN+1,y
	sta adr.BIASESHIDDEN+2,y
	sta adr.BIASESHIDDEN+3,y

; --- ForToDoEpilog
	inc I
	jne l_05CA
l_05D8

; optimize OK (NEURALNET), line = 122

	lda #$00
	sta I
	sta I+1

l_05EC
; --- ForToDoCondition
	lda I
	cmp #$8C
	jcs l_05FA

; optimize FAIL (1, NEURALNET), line = 123

	inx
	mva I :STACKORIGIN,x
	lda I+1
	asl :STACKORIGIN,x
	rol @
	asl :STACKORIGIN,x
	rol @
	sta :STACKORIGIN+STACKWIDTH,x
	jsr SYSTEM.RANDOMF
	inx
	inx
	lda #$00
	sta :FP2MAN0
	lda #$00
	sta :FP2MAN1
	lda #$00
	sta :FP2MAN2
	lda #$40
	sta :FP2MAN3
	lda SYSTEM.RANDOMF.RESULT
	sta :FP1MAN0
	lda SYSTEM.RANDOMF.RESULT+1
	sta :FP1MAN1
	lda SYSTEM.RANDOMF.RESULT+2
	sta :FP1MAN2
	lda SYSTEM.RANDOMF.RESULT+3
	sta :FP1MAN3
	jsr @FMUL
	lda :FPMAN0
	sta :STACKORIGIN-1,x
	lda :FPMAN1
	sta :STACKORIGIN-1+STACKWIDTH,x
	lda :FPMAN2
	sta :STACKORIGIN-1+STACKWIDTH*2,x
	lda :FPMAN3
	sta :STACKORIGIN-1+STACKWIDTH*3,x
	lda #$00
	sta :FP2MAN0
	lda #$00
	sta :FP2MAN1
	lda #$00
	sta :FP2MAN2
	lda #$3F
	sta :FP2MAN3
	lda :STACKORIGIN-1,x
	sta :FP1MAN0
	lda :STACKORIGIN-1+STACKWIDTH,x
	sta :FP1MAN1
	lda :STACKORIGIN-1+STACKWIDTH*2,x
	sta :FP1MAN2
	lda :STACKORIGIN-1+STACKWIDTH*3,x
	sta :FP1MAN3
	jsr @FSUB
	lda :FPMAN0
	sta :STACKORIGIN-1,x
	lda :FPMAN1
	sta :STACKORIGIN-1+STACKWIDTH,x
	lda :FPMAN2
	sta :STACKORIGIN-1+STACKWIDTH*2,x
	lda :FPMAN3
	sta :STACKORIGIN-1+STACKWIDTH*3,x
	dex
	lda WEIGHTSOUTPUT
	add :STACKORIGIN-1,x
	sta :bp2
	lda WEIGHTSOUTPUT+1
	adc :STACKORIGIN-1+STACKWIDTH,x
	sta :bp2+1
	ldy #$00
	lda :STACKORIGIN,x
	sta (:bp2),y
	iny
	lda :STACKORIGIN+STACKWIDTH,x
	sta (:bp2),y
	iny
	lda :STACKORIGIN+STACKWIDTH*2,x
	sta (:bp2),y
	iny
	lda :STACKORIGIN+STACKWIDTH*3,x
	sta (:bp2),y
	dex
	dex

; --- ForToDoEpilog
	inc I
	jne l_05EC
l_05FA

; optimize OK (NEURALNET), line = 124

	lda #$00
	sta I
	sta I+1

l_0616
; --- ForToDoCondition
	lda I
	cmp #$0A
	jcs l_0624

; optimize OK (NEURALNET), line = 125

	asl @
	asl @
	tay
	lda #$00
	sta adr.BIASESOUTPUT,y
	sta adr.BIASESOUTPUT+1,y
	sta adr.BIASESOUTPUT+2,y
	sta adr.BIASESOUTPUT+3,y

; --- ForToDoEpilog
	inc I
	jne l_0616
l_0624

; ------------------------------------------------------------

I	= DATAORIGIN+$4086

@VarData	= I
@VarDataSize	= 2

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	PREDICT						; FUNCTION

; optimize OK (NEURALNET), line = 136

	lda #$00
	sta H

l_063C
; --- ForToDoCondition
	lda H
	cmp #$0E
	jcs l_064A

; optimize OK (NEURALNET), line = 138

	lda #$00
	sta SUMHIDDEN
	sta SUMHIDDEN+1
	sta SUMHIDDEN+2
	sta SUMHIDDEN+3

; optimize OK (NEURALNET), line = 139

	sta I

l_0657
; --- ForToDoCondition
	lda I
	lsr @
	lsr @
	lsr @
	mwy INPUT :bp2
	tay
	lda (:bp2),y
	sta :STACKORIGIN+9
	lda I
	and #$07
	sta :STACKORIGIN+12
	lda #$07
	sub :STACKORIGIN+12
	sta :STACKORIGIN+11
	lda #$00
	sta :STACKORIGIN+STACKWIDTH*3+10
	sta :STACKORIGIN+STACKWIDTH*2+10
	sta :STACKORIGIN+STACKWIDTH+10
	lda #$01
	ldy :STACKORIGIN+11
	beq l_0000_e
l_0000_b
	asl @
	rol :STACKORIGIN+STACKWIDTH+10
	rol :STACKORIGIN+STACKWIDTH*2+10
	rol :STACKORIGIN+STACKWIDTH*3+10
	dey
	bne l_0000_b
l_0000_e
	and :STACKORIGIN+9
	jeq l_0690

; optimize OK (NEURALNET), line = 141

	lda I
	sta :ecx
	lda #$0E
	sta :eax
	.ifdef fmulinit
	fmulu_8
	els
	imulCL
	eif
	lda :eax
	add H
	sta :STACKORIGIN+10
	lda :eax+1
	adc #$00
	asl :STACKORIGIN+10
	rol @
	asl :STACKORIGIN+10
	rol @
	sta :STACKORIGIN+STACKWIDTH+10
	lda WEIGHTSHIDDEN
	add :STACKORIGIN+10
	sta :bp2
	lda WEIGHTSHIDDEN+1
	adc :STACKORIGIN+STACKWIDTH+10
	sta :bp2+1
	ldy #$00
	lda (:bp2),y
	sta :FP2MAN0
	iny
	lda (:bp2),y
	sta :FP2MAN1
	iny
	lda (:bp2),y
	sta :FP2MAN2
	iny
	lda (:bp2),y
	sta :FP2MAN3
	lda SUMHIDDEN
	sta :FP1MAN0
	lda SUMHIDDEN+1
	sta :FP1MAN1
	lda SUMHIDDEN+2
	sta :FP1MAN2
	lda SUMHIDDEN+3
	sta :FP1MAN3
	jsr @FADD
	lda :FPMAN0
	sta SUMHIDDEN
	lda :FPMAN1
	sta SUMHIDDEN+1
	lda :FPMAN2
	sta SUMHIDDEN+2
	lda :FPMAN3
	sta SUMHIDDEN+3
l_0690

; --- ForToDoEpilog
	inc I
	jne l_0657
l_0665

; optimize FAIL (1, NEURALNET), line = 142

	inx
	mva H :STACKORIGIN,x
	lda #$00
	asl :STACKORIGIN,x
	rol @
	asl :STACKORIGIN,x
	rol @
	sta :STACKORIGIN+STACKWIDTH,x
	lda H
	asl @
	asl @
	tay
	lda adr.BIASESHIDDEN,y
	sta :FP2MAN0
	lda adr.BIASESHIDDEN+1,y
	sta :FP2MAN1
	lda adr.BIASESHIDDEN+2,y
	sta :FP2MAN2
	lda adr.BIASESHIDDEN+3,y
	sta :FP2MAN3
	lda SUMHIDDEN
	sta :FP1MAN0
	lda SUMHIDDEN+1
	sta :FP1MAN1
	lda SUMHIDDEN+2
	sta :FP1MAN2
	lda SUMHIDDEN+3
	sta :FP1MAN3
	jsr @FADD
	lda :FPMAN0
	sta SIGMOID.ARG
	lda :FPMAN1
	sta SIGMOID.ARG+1
	lda :FPMAN2
	sta SIGMOID.ARG+2
	lda :FPMAN3
	sta SIGMOID.ARG+3
	jsr SIGMOID
	ldy :STACKORIGIN,x
	lda SIGMOID.RESULT
	sta adr.ACTIVATIONSHIDDEN,y
	lda SIGMOID.RESULT+1
	sta adr.ACTIVATIONSHIDDEN+1,y
	lda SIGMOID.RESULT+2
	sta adr.ACTIVATIONSHIDDEN+2,y
	lda SIGMOID.RESULT+3
	sta adr.ACTIVATIONSHIDDEN+3,y
	dex

; --- ForToDoEpilog
	inc H
	jne l_063C
l_064A

; optimize OK (NEURALNET), line = 145

	lda #$00
	sta MAXOUTPUT
	sta MAXOUTPUT+1
	lda #$80
	sta MAXOUTPUT+2
	lda #$BF
	sta MAXOUTPUT+3

; optimize OK (NEURALNET), line = 146

	lda #$00
	sta O

l_06CE
; --- ForToDoCondition
	lda O
	cmp #$0A
	jcs l_06DC

; optimize OK (NEURALNET), line = 148

	lda #$00
	sta SUMOUTPUT
	sta SUMOUTPUT+1
	sta SUMOUTPUT+2
	sta SUMOUTPUT+3

; optimize OK (NEURALNET), line = 150

	sta H

l_06E9
; --- ForToDoCondition
	lda H
	cmp #$0E
	jcs l_06F7

; optimize OK (NEURALNET), line = 151

	asl @
	asl @
	tay
	lda adr.ACTIVATIONSHIDDEN,y
	sta :FP1MAN0
	lda adr.ACTIVATIONSHIDDEN+1,y
	sta :FP1MAN1
	lda adr.ACTIVATIONSHIDDEN+2,y
	sta :FP1MAN2
	lda adr.ACTIVATIONSHIDDEN+3,y
	sta :FP1MAN3
	lda #$00
	sta :STACKORIGIN+STACKWIDTH+11
	lda H
	asl @
	rol :STACKORIGIN+STACKWIDTH+11
	asl @
	rol :STACKORIGIN+STACKWIDTH+11
	add H
	sta :STACKORIGIN+11
	lda :STACKORIGIN+STACKWIDTH+11
	adc #$00
	sta :STACKORIGIN+STACKWIDTH+11
	asl :STACKORIGIN+11
	rol :STACKORIGIN+STACKWIDTH+11
	lda :STACKORIGIN+11
	add O
	sta :STACKORIGIN+11
	lda :STACKORIGIN+STACKWIDTH+11
	adc #$00
	asl :STACKORIGIN+11
	rol @
	asl :STACKORIGIN+11
	rol @
	sta :STACKORIGIN+STACKWIDTH+11
	lda WEIGHTSOUTPUT
	add :STACKORIGIN+11
	sta :bp2
	lda WEIGHTSOUTPUT+1
	adc :STACKORIGIN+STACKWIDTH+11
	sta :bp2+1
	ldy #$00
	lda (:bp2),y
	sta :FP2MAN0
	iny
	lda (:bp2),y
	sta :FP2MAN1
	iny
	lda (:bp2),y
	sta :FP2MAN2
	iny
	lda (:bp2),y
	sta :FP2MAN3
	jsr @FMUL
	lda :FPMAN0
	sta :FP2MAN0
	lda :FPMAN1
	sta :FP2MAN1
	lda :FPMAN2
	sta :FP2MAN2
	lda :FPMAN3
	sta :FP2MAN3
	lda SUMOUTPUT
	sta :FP1MAN0
	lda SUMOUTPUT+1
	sta :FP1MAN1
	lda SUMOUTPUT+2
	sta :FP1MAN2
	lda SUMOUTPUT+3
	sta :FP1MAN3
	jsr @FADD
	lda :FPMAN0
	sta SUMOUTPUT
	lda :FPMAN1
	sta SUMOUTPUT+1
	lda :FPMAN2
	sta SUMOUTPUT+2
	lda :FPMAN3
	sta SUMOUTPUT+3

; --- ForToDoEpilog
	inc H
	jne l_06E9
l_06F7

; optimize FAIL (1, NEURALNET), line = 153

	inx
	mva O :STACKORIGIN,x
	lda #$00
	asl :STACKORIGIN,x
	rol @
	asl :STACKORIGIN,x
	rol @
	sta :STACKORIGIN+STACKWIDTH,x
	lda O
	asl @
	asl @
	tay
	lda adr.BIASESOUTPUT,y
	sta :FP2MAN0
	lda adr.BIASESOUTPUT+1,y
	sta :FP2MAN1
	lda adr.BIASESOUTPUT+2,y
	sta :FP2MAN2
	lda adr.BIASESOUTPUT+3,y
	sta :FP2MAN3
	lda SUMOUTPUT
	sta :FP1MAN0
	lda SUMOUTPUT+1
	sta :FP1MAN1
	lda SUMOUTPUT+2
	sta :FP1MAN2
	lda SUMOUTPUT+3
	sta :FP1MAN3
	jsr @FADD
	lda :FPMAN0
	sta SIGMOID.ARG
	lda :FPMAN1
	sta SIGMOID.ARG+1
	lda :FPMAN2
	sta SIGMOID.ARG+2
	lda :FPMAN3
	sta SIGMOID.ARG+3
	jsr SIGMOID
	ldy :STACKORIGIN,x
	lda SIGMOID.RESULT
	sta adr.ACTIVATIONSOUTPUT,y
	lda SIGMOID.RESULT+1
	sta adr.ACTIVATIONSOUTPUT+1,y
	lda SIGMOID.RESULT+2
	sta adr.ACTIVATIONSOUTPUT+2,y
	lda SIGMOID.RESULT+3
	sta adr.ACTIVATIONSOUTPUT+3,y
	dex

; optimize OK (NEURALNET), line = 154

	lda O
	asl @
	asl @
	tay
	lda adr.ACTIVATIONSOUTPUT,y
	sta @FCMPL.B
	lda adr.ACTIVATIONSOUTPUT+1,y
	sta @FCMPL.B+1
	lda adr.ACTIVATIONSOUTPUT+2,y
	sta @FCMPL.B+2
	lda adr.ACTIVATIONSOUTPUT+3,y
	sta @FCMPL.B+3
	lda MAXOUTPUT
	sta @FCMPL.A
	lda MAXOUTPUT+1
	sta @FCMPL.A+1
	lda MAXOUTPUT+2
	sta @FCMPL.A+2
	lda MAXOUTPUT+3
	sta @FCMPL.A+3
	jsr @FCMPL
	jmi l_073A
	jeq l_073A

; optimize OK (NEURALNET), line = 156

	lda O
	sta RESULT

; optimize OK (NEURALNET), line = 157

	asl @
	asl @
	tay
	lda adr.ACTIVATIONSOUTPUT,y
	sta MAXOUTPUT
	lda adr.ACTIVATIONSOUTPUT+1,y
	sta MAXOUTPUT+1
	lda adr.ACTIVATIONSOUTPUT+2,y
	sta MAXOUTPUT+2
	lda adr.ACTIVATIONSOUTPUT+3,y
	sta MAXOUTPUT+3
l_073A

; --- ForToDoEpilog
	inc O
	jne l_06CE
l_06DC
@exit

; ------------------------------------------------------------

INPUT	= DATAORIGIN+$4088
RESULT	= DATAORIGIN+$408A
I	= DATAORIGIN+$408B
H	= DATAORIGIN+$408C
O	= DATAORIGIN+$408D
SUMHIDDEN	= DATAORIGIN+$408E
SUMOUTPUT	= DATAORIGIN+$4092

@VarData	= INPUT
@VarDataSize	= 13

	rts						; ret
.endl

.local	TRAIN						; PROCEDURE

; optimize OK (NEURALNET), line = 171

	lda INPUT
	sta PREDICT.INPUT
	lda INPUT+1
	sta PREDICT.INPUT+1
	jsr PREDICT
	lda PREDICT.RESULT
	sta PREDICTED

; optimize OK (NEURALNET), line = 172

	lda #$00
	sta O

l_0762
; --- ForToDoCondition
	lda O
	cmp #$0A
	jcs l_0770

; optimize OK (NEURALNET), line = 174

	cmp OUTPUT
	jne l_0784

; optimize OK (NEURALNET), line = 175

	lda #$00
	sta OUTPUTBIT
	sta OUTPUTBIT+1
	lda #$80
	sta OUTPUTBIT+2
	lda #$3F
	jmp l_0792
l_0784

; optimize OK (NEURALNET), line = 177

	lda #$00
	sta OUTPUTBIT
	sta OUTPUTBIT+1
	sta OUTPUTBIT+2
l_0792
	sta OUTPUTBIT+3

; optimize FAIL (2, NEURALNET), line = 178

	inx
	mva O :STACKORIGIN,x
	lda #$00
	asl :STACKORIGIN,x
	rol @
	asl :STACKORIGIN,x
	rol @
	sta :STACKORIGIN+STACKWIDTH,x
	inx
	lda O
	asl @
	asl @
	tay
	lda adr.ACTIVATIONSOUTPUT,y
	sta :STACKORIGIN,x
	lda adr.ACTIVATIONSOUTPUT+1,y
	sta :STACKORIGIN+STACKWIDTH,x
	lda adr.ACTIVATIONSOUTPUT+2,y
	sta :STACKORIGIN+STACKWIDTH*2,x
	lda adr.ACTIVATIONSOUTPUT+3,y
	sta :STACKORIGIN+STACKWIDTH*3,x
	inx
	lda OUTPUTBIT
	sta :FP2MAN0
	lda OUTPUTBIT+1
	sta :FP2MAN1
	lda OUTPUTBIT+2
	sta :FP2MAN2
	lda OUTPUTBIT+3
	sta :FP2MAN3
	lda :STACKORIGIN-1,x
	sta :FP1MAN0
	lda :STACKORIGIN-1+STACKWIDTH,x
	sta :FP1MAN1
	lda :STACKORIGIN-1+STACKWIDTH*2,x
	sta :FP1MAN2
	lda :STACKORIGIN-1+STACKWIDTH*3,x
	sta :FP1MAN3
	jsr @FSUB
	lda :FPMAN0
	sta :STACKORIGIN-1,x
	lda :FPMAN1
	sta :STACKORIGIN-1+STACKWIDTH,x
	lda :FPMAN2
	sta :STACKORIGIN-1+STACKWIDTH*2,x
	lda :FPMAN3
	sta :STACKORIGIN-1+STACKWIDTH*3,x
	dex
	lda O
	asl @
	asl @
	tay
	lda adr.ACTIVATIONSOUTPUT,y
	sta SIGMOIDPRIM.ARG
	lda adr.ACTIVATIONSOUTPUT+1,y
	sta SIGMOIDPRIM.ARG+1
	lda adr.ACTIVATIONSOUTPUT+2,y
	sta SIGMOIDPRIM.ARG+2
	lda adr.ACTIVATIONSOUTPUT+3,y
	sta SIGMOIDPRIM.ARG+3
	jsr SIGMOIDPRIM
	inx
	lda SIGMOIDPRIM.RESULT
	sta :FP2MAN0
	lda SIGMOIDPRIM.RESULT+1
	sta :FP2MAN1
	lda SIGMOIDPRIM.RESULT+2
	sta :FP2MAN2
	lda SIGMOIDPRIM.RESULT+3
	sta :FP2MAN3
	lda :STACKORIGIN-1,x
	sta :FP1MAN0
	lda :STACKORIGIN-1+STACKWIDTH,x
	sta :FP1MAN1
	lda :STACKORIGIN-1+STACKWIDTH*2,x
	sta :FP1MAN2
	lda :STACKORIGIN-1+STACKWIDTH*3,x
	sta :FP1MAN3
	jsr @FMUL
	lda :FPMAN0
	sta :STACKORIGIN-1,x
	lda :FPMAN1
	sta :STACKORIGIN-1+STACKWIDTH,x
	lda :FPMAN2
	sta :STACKORIGIN-1+STACKWIDTH*2,x
	lda :FPMAN3
	sta :STACKORIGIN-1+STACKWIDTH*3,x
	dex
	ldy :STACKORIGIN-1,x
	lda :STACKORIGIN,x
	sta adr.GRADIENTSOUTPUT,y
	lda :STACKORIGIN+STACKWIDTH,x
	sta adr.GRADIENTSOUTPUT+1,y
	lda :STACKORIGIN+STACKWIDTH*2,x
	sta adr.GRADIENTSOUTPUT+2,y
	lda :STACKORIGIN+STACKWIDTH*3,x
	sta adr.GRADIENTSOUTPUT+3,y
	dex
	dex

; --- ForToDoEpilog
	inc O
	jne l_0762
l_0770

; optimize OK (NEURALNET), line = 181

	lda #$00
	sta H

l_07BA
; --- ForToDoCondition
	lda H
	cmp #$0E
	jcs l_07C8

; optimize OK (NEURALNET), line = 183

	lda #$00
	sta GRADIENTHIDDENSUM
	sta GRADIENTHIDDENSUM+1
	sta GRADIENTHIDDENSUM+2
	sta GRADIENTHIDDENSUM+3

; optimize OK (NEURALNET), line = 184

	sta O

l_07D5
; --- ForToDoCondition
	lda O
	cmp #$0A
	jcs l_07E3

; optimize OK (NEURALNET), line = 185

	asl @
	asl @
	tay
	lda adr.GRADIENTSOUTPUT,y
	sta :FP1MAN0
	lda adr.GRADIENTSOUTPUT+1,y
	sta :FP1MAN1
	lda adr.GRADIENTSOUTPUT+2,y
	sta :FP1MAN2
	lda adr.GRADIENTSOUTPUT+3,y
	sta :FP1MAN3
	lda #$00
	sta :STACKORIGIN+STACKWIDTH+11
	lda H
	asl @
	rol :STACKORIGIN+STACKWIDTH+11
	asl @
	rol :STACKORIGIN+STACKWIDTH+11
	add H
	sta :STACKORIGIN+11
	lda :STACKORIGIN+STACKWIDTH+11
	adc #$00
	sta :STACKORIGIN+STACKWIDTH+11
	asl :STACKORIGIN+11
	rol :STACKORIGIN+STACKWIDTH+11
	lda :STACKORIGIN+11
	add O
	sta :STACKORIGIN+11
	lda :STACKORIGIN+STACKWIDTH+11
	adc #$00
	asl :STACKORIGIN+11
	rol @
	asl :STACKORIGIN+11
	rol @
	sta :STACKORIGIN+STACKWIDTH+11
	lda WEIGHTSOUTPUT
	add :STACKORIGIN+11
	sta :bp2
	lda WEIGHTSOUTPUT+1
	adc :STACKORIGIN+STACKWIDTH+11
	sta :bp2+1
	ldy #$00
	lda (:bp2),y
	sta :FP2MAN0
	iny
	lda (:bp2),y
	sta :FP2MAN1
	iny
	lda (:bp2),y
	sta :FP2MAN2
	iny
	lda (:bp2),y
	sta :FP2MAN3
	jsr @FMUL
	lda :FPMAN0
	sta :FP2MAN0
	lda :FPMAN1
	sta :FP2MAN1
	lda :FPMAN2
	sta :FP2MAN2
	lda :FPMAN3
	sta :FP2MAN3
	lda GRADIENTHIDDENSUM
	sta :FP1MAN0
	lda GRADIENTHIDDENSUM+1
	sta :FP1MAN1
	lda GRADIENTHIDDENSUM+2
	sta :FP1MAN2
	lda GRADIENTHIDDENSUM+3
	sta :FP1MAN3
	jsr @FADD
	lda :FPMAN0
	sta GRADIENTHIDDENSUM
	lda :FPMAN1
	sta GRADIENTHIDDENSUM+1
	lda :FPMAN2
	sta GRADIENTHIDDENSUM+2
	lda :FPMAN3
	sta GRADIENTHIDDENSUM+3

; --- ForToDoEpilog
	inc O
	jne l_07D5
l_07E3

; optimize FAIL (2, NEURALNET), line = 186

	inx
	mva H :STACKORIGIN,x
	lda #$00
	asl :STACKORIGIN,x
	rol @
	asl :STACKORIGIN,x
	rol @
	sta :STACKORIGIN+STACKWIDTH,x
	inx
	mva GRADIENTHIDDENSUM :STACKORIGIN,x
	mva GRADIENTHIDDENSUM+1 :STACKORIGIN+STACKWIDTH,x
	mva GRADIENTHIDDENSUM+2 :STACKORIGIN+STACKWIDTH*2,x
	mva GRADIENTHIDDENSUM+3 :STACKORIGIN+STACKWIDTH*3,x
	lda H
	asl @
	asl @
	tay
	lda adr.ACTIVATIONSHIDDEN,y
	sta SIGMOIDPRIM.ARG
	lda adr.ACTIVATIONSHIDDEN+1,y
	sta SIGMOIDPRIM.ARG+1
	lda adr.ACTIVATIONSHIDDEN+2,y
	sta SIGMOIDPRIM.ARG+2
	lda adr.ACTIVATIONSHIDDEN+3,y
	sta SIGMOIDPRIM.ARG+3
	jsr SIGMOIDPRIM
	inx
	lda SIGMOIDPRIM.RESULT
	sta :FP2MAN0
	lda SIGMOIDPRIM.RESULT+1
	sta :FP2MAN1
	lda SIGMOIDPRIM.RESULT+2
	sta :FP2MAN2
	lda SIGMOIDPRIM.RESULT+3
	sta :FP2MAN3
	lda :STACKORIGIN-1,x
	sta :FP1MAN0
	lda :STACKORIGIN-1+STACKWIDTH,x
	sta :FP1MAN1
	lda :STACKORIGIN-1+STACKWIDTH*2,x
	sta :FP1MAN2
	lda :STACKORIGIN-1+STACKWIDTH*3,x
	sta :FP1MAN3
	jsr @FMUL
	lda :FPMAN0
	sta :STACKORIGIN-1,x
	lda :FPMAN1
	sta :STACKORIGIN-1+STACKWIDTH,x
	lda :FPMAN2
	sta :STACKORIGIN-1+STACKWIDTH*2,x
	lda :FPMAN3
	sta :STACKORIGIN-1+STACKWIDTH*3,x
	dex
	ldy :STACKORIGIN-1,x
	lda :STACKORIGIN,x
	sta adr.GRADIENTSHIDDEN,y
	lda :STACKORIGIN+STACKWIDTH,x
	sta adr.GRADIENTSHIDDEN+1,y
	lda :STACKORIGIN+STACKWIDTH*2,x
	sta adr.GRADIENTSHIDDEN+2,y
	lda :STACKORIGIN+STACKWIDTH*3,x
	sta adr.GRADIENTSHIDDEN+3,y
	dex
	dex

; --- ForToDoEpilog
	inc H
	jne l_07BA
l_07C8

; optimize OK (NEURALNET), line = 189

	lda #$00
	sta H

l_0821
; --- ForToDoCondition
	lda H
	cmp #$0E
	jcs l_082F

; optimize OK (NEURALNET), line = 190

	lda #$00
	sta O

l_0838
; --- ForToDoCondition
	lda O
	cmp #$0A
	jcs l_0846

; optimize OK (NEURALNET), line = 191

	lda #$00
	sta :STACKORIGIN+STACKWIDTH+9
	lda H
	asl @
	rol :STACKORIGIN+STACKWIDTH+9
	asl @
	rol :STACKORIGIN+STACKWIDTH+9
	add H
	sta :STACKORIGIN+9
	lda :STACKORIGIN+STACKWIDTH+9
	adc #$00
	sta :STACKORIGIN+STACKWIDTH+9
	asl :STACKORIGIN+9
	rol :STACKORIGIN+STACKWIDTH+9
	lda :STACKORIGIN+9
	add O
	sta :STACKORIGIN+9
	lda :STACKORIGIN+STACKWIDTH+9
	adc #$00
	asl :STACKORIGIN+9
	rol @
	asl :STACKORIGIN+9
	rol @
	sta :STACKORIGIN+STACKWIDTH+9
	lda #$00
	sta :STACKORIGIN+STACKWIDTH+10
	lda H
	asl @
	rol :STACKORIGIN+STACKWIDTH+10
	asl @
	rol :STACKORIGIN+STACKWIDTH+10
	add H
	sta :STACKORIGIN+10
	lda :STACKORIGIN+STACKWIDTH+10
	adc #$00
	sta :STACKORIGIN+STACKWIDTH+10
	asl :STACKORIGIN+10
	rol :STACKORIGIN+STACKWIDTH+10
	lda :STACKORIGIN+10
	add O
	sta :STACKORIGIN+10
	lda :STACKORIGIN+STACKWIDTH+10
	adc #$00
	asl :STACKORIGIN+10
	rol @
	asl :STACKORIGIN+10
	rol @
	sta :STACKORIGIN+STACKWIDTH+10
	lda WEIGHTSOUTPUT
	add :STACKORIGIN+10
	sta :bp2
	lda WEIGHTSOUTPUT+1
	adc :STACKORIGIN+STACKWIDTH+10
	sta :bp2+1
	ldy #$00
	lda (:bp2),y
	sta :STACKORIGIN+10
	iny
	lda (:bp2),y
	sta :STACKORIGIN+STACKWIDTH+10
	iny
	lda (:bp2),y
	sta :STACKORIGIN+STACKWIDTH*2+10
	iny
	lda (:bp2),y
	sta :STACKORIGIN+STACKWIDTH*3+10
	lda O
	asl @
	asl @
	tay
	lda adr.GRADIENTSOUTPUT,y
	sta :FP2MAN0
	lda adr.GRADIENTSOUTPUT+1,y
	sta :FP2MAN1
	lda adr.GRADIENTSOUTPUT+2,y
	sta :FP2MAN2
	lda adr.GRADIENTSOUTPUT+3,y
	sta :FP2MAN3
	lda #$00
	sta :FP1MAN0
	sta :FP1MAN1
	sta :FP1MAN2
	lda #$3F
	sta :FP1MAN3
	jsr @FMUL
	lda :FPMAN0
	sta :FP1MAN0
	lda :FPMAN1
	sta :FP1MAN1
	lda :FPMAN2
	sta :FP1MAN2
	lda :FPMAN3
	sta :FP1MAN3
	lda H
	asl @
	asl @
	tay
	lda adr.ACTIVATIONSHIDDEN,y
	sta :FP2MAN0
	lda adr.ACTIVATIONSHIDDEN+1,y
	sta :FP2MAN1
	lda adr.ACTIVATIONSHIDDEN+2,y
	sta :FP2MAN2
	lda adr.ACTIVATIONSHIDDEN+3,y
	sta :FP2MAN3
	jsr @FMUL
	lda :FPMAN0
	sta :FP2MAN0
	lda :FPMAN1
	sta :FP2MAN1
	lda :FPMAN2
	sta :FP2MAN2
	lda :FPMAN3
	sta :FP2MAN3
	lda :STACKORIGIN+10
	sta :FP1MAN0
	lda :STACKORIGIN+STACKWIDTH+10
	sta :FP1MAN1
	lda :STACKORIGIN+STACKWIDTH*2+10
	sta :FP1MAN2
	lda :STACKORIGIN+STACKWIDTH*3+10
	sta :FP1MAN3
	jsr @FSUB
	lda WEIGHTSOUTPUT
	add :STACKORIGIN+9
	sta :bp2
	lda WEIGHTSOUTPUT+1
	adc :STACKORIGIN+STACKWIDTH+9
	sta :bp2+1
	ldy #$00
	lda :FPMAN0
	sta (:bp2),y
	iny
	lda :FPMAN1
	sta (:bp2),y
	iny
	lda :FPMAN2
	sta (:bp2),y
	iny
	lda :FPMAN3
	sta (:bp2),y

; --- ForToDoEpilog
	inc O
	jne l_0838
l_0846

; --- ForToDoEpilog
	inc H
	jne l_0821
l_082F

; optimize OK (NEURALNET), line = 193

	lda #$00
	sta I

l_0889
; --- ForToDoCondition
	lda I
	lsr @
	lsr @
	lsr @
	mwy INPUT :bp2
	tay
	lda (:bp2),y
	sta :STACKORIGIN+9
	lda I
	and #$07
	sta :STACKORIGIN+12
	lda #$07
	sub :STACKORIGIN+12
	sta :STACKORIGIN+11
	lda #$00
	sta :STACKORIGIN+STACKWIDTH*3+10
	sta :STACKORIGIN+STACKWIDTH*2+10
	sta :STACKORIGIN+STACKWIDTH+10
	lda #$01
	ldy :STACKORIGIN+11
	beq l_0001_e
l_0001_b
	asl @
	rol :STACKORIGIN+STACKWIDTH+10
	rol :STACKORIGIN+STACKWIDTH*2+10
	rol :STACKORIGIN+STACKWIDTH*3+10
	dey
	bne l_0001_b
l_0001_e
	and :STACKORIGIN+9
	jeq l_08C2

; optimize OK (NEURALNET), line = 196

	lda #$00
	sta INPUTBIT
	sta INPUTBIT+1
	lda #$80
	sta INPUTBIT+2
	lda #$3F
	jmp l_08D0
l_08C2

; optimize OK (NEURALNET), line = 198

	lda #$00
	sta INPUTBIT
	sta INPUTBIT+1
	sta INPUTBIT+2
l_08D0
	sta INPUTBIT+3

; optimize OK (NEURALNET), line = 200

	lda #$00
	sta H

l_08DD
; --- ForToDoCondition
	lda H
	cmp #$0E
	jcs l_08EB

; optimize OK (NEURALNET), line = 201

	lda I
	sta :ecx
	lda #$0E
	sta :eax
	.ifdef fmulinit
	fmulu_8
	els
	imulCL
	eif
	lda :eax
	add H
	sta :STACKORIGIN+9
	lda :eax+1
	adc #$00
	asl :STACKORIGIN+9
	rol @
	asl :STACKORIGIN+9
	rol @
	sta :STACKORIGIN+STACKWIDTH+9
	lda I
	sta :ecx
	lda #$0E
	sta :eax
	.ifdef fmulinit
	fmulu_8
	els
	imulCL
	eif
	lda :eax
	add H
	sta :STACKORIGIN+10
	lda :eax+1
	adc #$00
	asl :STACKORIGIN+10
	rol @
	asl :STACKORIGIN+10
	rol @
	sta :STACKORIGIN+STACKWIDTH+10
	lda WEIGHTSHIDDEN
	add :STACKORIGIN+10
	sta :bp2
	lda WEIGHTSHIDDEN+1
	adc :STACKORIGIN+STACKWIDTH+10
	sta :bp2+1
	ldy #$00
	lda (:bp2),y
	sta :STACKORIGIN+10
	iny
	lda (:bp2),y
	sta :STACKORIGIN+STACKWIDTH+10
	iny
	lda (:bp2),y
	sta :STACKORIGIN+STACKWIDTH*2+10
	iny
	lda (:bp2),y
	sta :STACKORIGIN+STACKWIDTH*3+10
	lda H
	asl @
	asl @
	tay
	lda adr.GRADIENTSHIDDEN,y
	sta :FP2MAN0
	lda adr.GRADIENTSHIDDEN+1,y
	sta :FP2MAN1
	lda adr.GRADIENTSHIDDEN+2,y
	sta :FP2MAN2
	lda adr.GRADIENTSHIDDEN+3,y
	sta :FP2MAN3
	lda #$00
	sta :FP1MAN0
	sta :FP1MAN1
	sta :FP1MAN2
	lda #$3F
	sta :FP1MAN3
	jsr @FMUL
	lda :FPMAN0
	sta :FP1MAN0
	lda :FPMAN1
	sta :FP1MAN1
	lda :FPMAN2
	sta :FP1MAN2
	lda :FPMAN3
	sta :FP1MAN3
	lda INPUTBIT
	sta :FP2MAN0
	lda INPUTBIT+1
	sta :FP2MAN1
	lda INPUTBIT+2
	sta :FP2MAN2
	lda INPUTBIT+3
	sta :FP2MAN3
	jsr @FMUL
	lda :FPMAN0
	sta :FP2MAN0
	lda :FPMAN1
	sta :FP2MAN1
	lda :FPMAN2
	sta :FP2MAN2
	lda :FPMAN3
	sta :FP2MAN3
	lda :STACKORIGIN+10
	sta :FP1MAN0
	lda :STACKORIGIN+STACKWIDTH+10
	sta :FP1MAN1
	lda :STACKORIGIN+STACKWIDTH*2+10
	sta :FP1MAN2
	lda :STACKORIGIN+STACKWIDTH*3+10
	sta :FP1MAN3
	jsr @FSUB
	lda WEIGHTSHIDDEN
	add :STACKORIGIN+9
	sta :bp2
	lda WEIGHTSHIDDEN+1
	adc :STACKORIGIN+STACKWIDTH+9
	sta :bp2+1
	ldy #$00
	lda :FPMAN0
	sta (:bp2),y
	iny
	lda :FPMAN1
	sta (:bp2),y
	iny
	lda :FPMAN2
	sta (:bp2),y
	iny
	lda :FPMAN3
	sta (:bp2),y

; --- ForToDoEpilog
	inc H
	jne l_08DD
l_08EB

; --- ForToDoEpilog
	inc I
	jne l_0889
l_0897

; optimize OK (NEURALNET), line = 204

	lda #$00
	sta O

l_092B
; --- ForToDoCondition
	lda O
	cmp #$0A
	jcs l_0939

; optimize OK (NEURALNET), line = 205

	sta :STACKORIGIN+9
	asl @
	asl @
	tay
	lda adr.BIASESOUTPUT,y
	sta :STACKORIGIN+10
	lda adr.BIASESOUTPUT+1,y
	sta :STACKORIGIN+STACKWIDTH+10
	lda adr.BIASESOUTPUT+2,y
	sta :STACKORIGIN+STACKWIDTH*2+10
	lda adr.BIASESOUTPUT+3,y
	sta :STACKORIGIN+STACKWIDTH*3+10
	lda O
	asl @
	asl @
	tay
	lda adr.GRADIENTSOUTPUT,y
	sta :FP2MAN0
	lda adr.GRADIENTSOUTPUT+1,y
	sta :FP2MAN1
	lda adr.GRADIENTSOUTPUT+2,y
	sta :FP2MAN2
	lda adr.GRADIENTSOUTPUT+3,y
	sta :FP2MAN3
	lda #$00
	sta :FP1MAN0
	sta :FP1MAN1
	sta :FP1MAN2
	lda #$3F
	sta :FP1MAN3
	jsr @FMUL
	lda :FPMAN0
	sta :FP2MAN0
	lda :FPMAN1
	sta :FP2MAN1
	lda :FPMAN2
	sta :FP2MAN2
	lda :FPMAN3
	sta :FP2MAN3
	lda :STACKORIGIN+10
	sta :FP1MAN0
	lda :STACKORIGIN+STACKWIDTH+10
	sta :FP1MAN1
	lda :STACKORIGIN+STACKWIDTH*2+10
	sta :FP1MAN2
	lda :STACKORIGIN+STACKWIDTH*3+10
	sta :FP1MAN3
	jsr @FSUB
	lda :STACKORIGIN+9
	asl @
	asl @
	tay
	lda :FPMAN0
	sta adr.BIASESOUTPUT,y
	lda :FPMAN1
	sta adr.BIASESOUTPUT+1,y
	lda :FPMAN2
	sta adr.BIASESOUTPUT+2,y
	lda :FPMAN3
	sta adr.BIASESOUTPUT+3,y

; --- ForToDoEpilog
	inc O
	jne l_092B
l_0939

; optimize OK (NEURALNET), line = 207

	lda #$00
	sta H

l_095C
; --- ForToDoCondition
	lda H
	cmp #$0E
	jcs l_096A

; optimize OK (NEURALNET), line = 208

	sta :STACKORIGIN+9
	asl @
	asl @
	tay
	lda adr.BIASESHIDDEN,y
	sta :STACKORIGIN+10
	lda adr.BIASESHIDDEN+1,y
	sta :STACKORIGIN+STACKWIDTH+10
	lda adr.BIASESHIDDEN+2,y
	sta :STACKORIGIN+STACKWIDTH*2+10
	lda adr.BIASESHIDDEN+3,y
	sta :STACKORIGIN+STACKWIDTH*3+10
	lda H
	asl @
	asl @
	tay
	lda adr.GRADIENTSHIDDEN,y
	sta :FP2MAN0
	lda adr.GRADIENTSHIDDEN+1,y
	sta :FP2MAN1
	lda adr.GRADIENTSHIDDEN+2,y
	sta :FP2MAN2
	lda adr.GRADIENTSHIDDEN+3,y
	sta :FP2MAN3
	lda #$00
	sta :FP1MAN0
	sta :FP1MAN1
	sta :FP1MAN2
	lda #$3F
	sta :FP1MAN3
	jsr @FMUL
	lda :FPMAN0
	sta :FP2MAN0
	lda :FPMAN1
	sta :FP2MAN1
	lda :FPMAN2
	sta :FP2MAN2
	lda :FPMAN3
	sta :FP2MAN3
	lda :STACKORIGIN+10
	sta :FP1MAN0
	lda :STACKORIGIN+STACKWIDTH+10
	sta :FP1MAN1
	lda :STACKORIGIN+STACKWIDTH*2+10
	sta :FP1MAN2
	lda :STACKORIGIN+STACKWIDTH*3+10
	sta :FP1MAN3
	jsr @FSUB
	lda :STACKORIGIN+9
	asl @
	asl @
	tay
	lda :FPMAN0
	sta adr.BIASESHIDDEN,y
	lda :FPMAN1
	sta adr.BIASESHIDDEN+1,y
	lda :FPMAN2
	sta adr.BIASESHIDDEN+2,y
	lda :FPMAN3
	sta adr.BIASESHIDDEN+3,y

; --- ForToDoEpilog
	inc H
	jne l_095C
l_096A

; ------------------------------------------------------------

INPUT	= DATAORIGIN+$4096
OUTPUT	= DATAORIGIN+$4098
O	= DATAORIGIN+$4099
H	= DATAORIGIN+$409A
I	= DATAORIGIN+$409B
OUTPUTBIT	= DATAORIGIN+$409C
INPUTBIT	= DATAORIGIN+$40A0
GRADIENTHIDDENSUM	= DATAORIGIN+$40A4
PREDICTED	= DATAORIGIN+$40A8

@VarData	= INPUT
@VarDataSize	= 19

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

; ------------------------------------------------------------

BATCH_ROW_COUNT_MAX	= $64
BATCH_ROW_LENGTH	= $21
INPUT_LAYER_SIZE	= $0100
HIDDEN_LAYER_SIZE	= $0E
OUTPUT_LAYER_SIZE	= $0A
LEARNING_RATE	= $3F000000
adr.WEIGHTSHIDDEN	= [DATAORIGIN+$0521] .array [3584] .dword
.var WEIGHTSHIDDEN	= adr.WEIGHTSHIDDEN .word
adr.BIASESHIDDEN	= [DATAORIGIN+$3D21] .array [14] .dword
.var BIASESHIDDEN	= adr.BIASESHIDDEN .word
adr.ACTIVATIONSHIDDEN	= [DATAORIGIN+$3D59] .array [14] .dword
.var ACTIVATIONSHIDDEN	= adr.ACTIVATIONSHIDDEN .word
adr.WEIGHTSOUTPUT	= [DATAORIGIN+$3D91] .array [140] .dword
.var WEIGHTSOUTPUT	= adr.WEIGHTSOUTPUT .word
adr.BIASESOUTPUT	= [DATAORIGIN+$3FC1] .array [10] .dword
.var BIASESOUTPUT	= adr.BIASESOUTPUT .word
adr.ACTIVATIONSOUTPUT	= [DATAORIGIN+$3FE9] .array [10] .dword
.var ACTIVATIONSOUTPUT	= adr.ACTIVATIONSOUTPUT .word
adr.GRADIENTSHIDDEN	= [DATAORIGIN+$4011] .array [14] .dword
.var GRADIENTSHIDDEN	= adr.GRADIENTSHIDDEN .word
adr.GRADIENTSOUTPUT	= [DATAORIGIN+$4049] .array [10] .dword
.var GRADIENTSOUTPUT	= adr.GRADIENTSOUTPUT .word
MAXOUTPUT	= DATAORIGIN+$4071
BATCHLENGTH	= DATAORIGIN+$4075

.endl							; UNIT NEURALNET

; ------------------------------------------------------------

.local	HARDWARE					; UNIT

; ------------------------------------------------------------

CIA1PRA	= $DC00
CIA1PRB	= $DC01
CIA1DDRA	= $DC02
CIA1DDRB	= $DC03
CIA2PRA	= $DD00
CIA2PRB	= $DD01
CIA2DDRA	= $DD02
CIA2DDRB	= $DD03

.endl							; UNIT HARDWARE

; ------------------------------------------------------------

.local	JOYSTICK					; UNIT

.local	RESETJOYSTICK					; PROCEDURE

; optimize OK (JOYSTICK), line = 55

	lda #$00
	sta INPUTDX

; optimize OK (JOYSTICK), line = 56

	sta INPUTDY

; optimize OK (JOYSTICK), line = 57

	sta INPUTBUTTON

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	READJOYSTICK2					; PROCEDURE

; optimize FAIL ('RESETJOYSTICK', JOYSTICK), line = 82

	jsr RESETJOYSTICK

; optimize OK (JOYSTICK), line = 83

	lda HARDWARE.CIA1DDRA
	sta BAKCIA

; optimize OK (JOYSTICK), line = 84

	lda #$00
	sta HARDWARE.CIA1DDRA

; optimize OK (JOYSTICK), line = 85

?volatile:
	lda HARDWARE.CIA1PRA
	sta VALUE

; optimize OK (JOYSTICK), line = 86

	and #$01
	jne l_09C4
	dec INPUTDY
l_09C4

; optimize OK (JOYSTICK), line = 87

	lda VALUE
	and #$02
	jne l_09E1
	inc INPUTDY
l_09E1

; optimize OK (JOYSTICK), line = 88

	lda VALUE
	and #$04
	jne l_09FE
	dec INPUTDX
l_09FE

; optimize OK (JOYSTICK), line = 89

	lda VALUE
	and #$08
	jne l_0A1B
	inc INPUTDX
l_0A1B

; optimize OK (JOYSTICK), line = 90

	lda VALUE
	and #$10
	jne l_0A38
	inc INPUTBUTTON
l_0A38

; optimize OK (JOYSTICK), line = 91

	lda PREVIOUSBUTTONSTATE
	jne l_0A57s
	lda INPUTBUTTON
	cmp #$01
	jne l_0A57s
	lda:sne #$01
l_0A57s	lda #$00
	sta BUTTONPRESSED

; optimize OK (JOYSTICK), line = 92

	lda INPUTBUTTON
	sta PREVIOUSBUTTONSTATE

; optimize OK (JOYSTICK), line = 93

	lda BAKCIA
	sta HARDWARE.CIA1DDRA

; ------------------------------------------------------------

VALUE	= DATAORIGIN+$40AE
BAKCIA	= DATAORIGIN+$40AF

@VarData	= VALUE
@VarDataSize	= 2

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

; ------------------------------------------------------------

INPUTDX	= DATAORIGIN+$40A9
INPUTDY	= DATAORIGIN+$40AA
INPUTBUTTON	= DATAORIGIN+$40AB
PREVIOUSBUTTONSTATE	= DATAORIGIN+$40AC
BUTTONPRESSED	= DATAORIGIN+$40AD

.endl							; UNIT JOYSTICK

; ------------------------------------------------------------

.local	MOUSE1531					; UNIT

; ------------------------------------------------------------

MOUSEX	= DATAORIGIN+$40B0
MOUSEY	= DATAORIGIN+$40B2
DELTAX	= DATAORIGIN+$40B4
DELTAY	= DATAORIGIN+$40B6
MOUSELBM	= DATAORIGIN+$40B8
MOUSERBM	= DATAORIGIN+$40B9
OLDX	= DATAORIGIN+$40BA
OLDY	= DATAORIGIN+$40BC
OLDPOTX	= DATAORIGIN+$40BE
OLDPOTY	= DATAORIGIN+$40BF
MOUSEXALIAS	= DATAORIGIN+$40C0

.endl							; UNIT MOUSE1531

; ------------------------------------------------------------

.local	LIGHTPEN					; UNIT

.local	CHECKPEN					; PROCEDURE

; optimize OK (LIGHTPEN), line = 60

	lda #$01
	sta I

l_0A75
; --- ForToDoCondition
	lda I
	cmp #$06
	jcs l_0A83

; optimize OK (LIGHTPEN), line = 62

	lda #$00
	sta :STACKORIGIN+STACKWIDTH+10
	lda C64.LIGHTPENX
	asl @
	rol :STACKORIGIN+STACKWIDTH+10
	add PENX
	sta PENX
	lda PENX+1
	adc :STACKORIGIN+STACKWIDTH+10
	sta PENX+1

; optimize OK (LIGHTPEN), line = 63

	lda PENY
	add C64.LIGHTPENY
	sta PENY
	scc
	inc PENY+1

; --- ForToDoEpilog
	inc I
	jne l_0A75
l_0A83

; optimize OK (LIGHTPEN), line = 65

	lda C64.LIGHTPENX
	sta PENX
	lda #$00
	asl PENX
	rol @
	sta PENX+1

; optimize OK (LIGHTPEN), line = 66

	lda C64.LIGHTPENY
	sta PENY
	lda #$00
	sta PENY+1

; optimize OK (LIGHTPEN), line = 67

	lda PENX
	sta :STACKORIGIN+9
	ldy #$00
	lda PENX+1
	spl
	dey
	sta :STACKORIGIN+STACKWIDTH+9
	sty :STACKORIGIN+STACKWIDTH*2+9
	sty :STACKORIGIN+STACKWIDTH*3+9
	lda :STACKORIGIN+9
	sub #$30
	sta @INTEGER.DIV.A
	lda :STACKORIGIN+STACKWIDTH+9
	sbc #$00
	sta @INTEGER.DIV.A+1
	lda :STACKORIGIN+STACKWIDTH*2+9
	sbc #$00
	sta @INTEGER.DIV.A+2
	lda :STACKORIGIN+STACKWIDTH*3+9
	sbc #$00
	sta @INTEGER.DIV.A+3
	lda #$08
	sta @INTEGER.DIV.B
	lda #$00
	sta @INTEGER.DIV.B+1
	sta @INTEGER.DIV.B+2
	sta @INTEGER.DIV.B+3
	jsr @INTEGER.DIV
	lda :eax
	sta PENCHARX

; optimize OK (LIGHTPEN), line = 68

	jpl l_0AD1
	lda #$00
	sta PENCHARX
l_0AD1

; optimize OK (LIGHTPEN), line = 69

	lda PENCHARX
	sub #$28
	svc
	eor #$80
	jmi l_0AEA
	lda #$27
	sta PENCHARX
l_0AEA

; optimize OK (LIGHTPEN), line = 70

	lda PENY
	sta :STACKORIGIN+9
	ldy #$00
	lda PENY+1
	spl
	dey
	sta :STACKORIGIN+STACKWIDTH+9
	sty :STACKORIGIN+STACKWIDTH*2+9
	sty :STACKORIGIN+STACKWIDTH*3+9
	lda :STACKORIGIN+9
	sub #$32
	sta @INTEGER.DIV.A
	lda :STACKORIGIN+STACKWIDTH+9
	sbc #$00
	sta @INTEGER.DIV.A+1
	lda :STACKORIGIN+STACKWIDTH*2+9
	sbc #$00
	sta @INTEGER.DIV.A+2
	lda :STACKORIGIN+STACKWIDTH*3+9
	sbc #$00
	sta @INTEGER.DIV.A+3
	lda #$08
	sta @INTEGER.DIV.B
	lda #$00
	sta @INTEGER.DIV.B+1
	sta @INTEGER.DIV.B+2
	sta @INTEGER.DIV.B+3
	jsr @INTEGER.DIV
	lda :eax
	sta PENCHARY

; optimize OK (LIGHTPEN), line = 71

	jpl l_0B10
	lda #$00
	sta PENCHARY
l_0B10

; optimize OK (LIGHTPEN), line = 72

	lda PENCHARY
	sub #$19
	svc
	eor #$80
	jmi l_0B29
	lda #$18
	sta PENCHARY
l_0B29

; ------------------------------------------------------------

I	= DATAORIGIN+$40CC

@VarData	= I
@VarDataSize	= 1

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

; ------------------------------------------------------------

PENX	= DATAORIGIN+$40C2
PENY	= DATAORIGIN+$40C4
PENCHARX	= DATAORIGIN+$40C6
PENCHARY	= DATAORIGIN+$40C7
OLDX	= DATAORIGIN+$40C8
OLDY	= DATAORIGIN+$40CA

.endl							; UNIT LIGHTPEN

.local	MOVECURSOR					; PROCEDURE

; optimize FAIL (1, /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 143

	inx
	mva #$0F :STACKORIGIN,x
	mva #$00 :STACKORIGIN+STACKWIDTH,x
	inx
	mva #$00 :STACKORIGIN,x
	sta :STACKORIGIN+STACKWIDTH,x
	inx
	mva X :STACKORIGIN,x
	jsr @expandSHORT2SMALL
	lda :STACKORIGIN,x
	sta MATH.MAX.@0201840000184000.X
	lda :STACKORIGIN+STACKWIDTH,x
	sta MATH.MAX.@0201840000184000.X+1
	dex
	lda :STACKORIGIN,x
	sta MATH.MAX.@0201840000184000.Y
	lda :STACKORIGIN+STACKWIDTH,x
	sta MATH.MAX.@0201840000184000.Y+1
	dex
	jsr MATH.MAX.@0201840000184000
	lda MATH.MAX.@0201840000184000.RESULT
	sta MATH.MIN.@0201840000184000.X
	lda MATH.MAX.@0201840000184000.RESULT+1
	sta MATH.MIN.@0201840000184000.X+1
	lda :STACKORIGIN,x
	sta MATH.MIN.@0201840000184000.Y
	lda :STACKORIGIN+STACKWIDTH,x
	sta MATH.MIN.@0201840000184000.Y+1
	dex
	jsr MATH.MIN.@0201840000184000
	lda MATH.MIN.@0201840000184000.RESULT
	sta CURSORX

; optimize FAIL (1, /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 144

	inx
	mva #$0F :STACKORIGIN,x
	mva #$00 :STACKORIGIN+STACKWIDTH,x
	inx
	mva #$00 :STACKORIGIN,x
	sta :STACKORIGIN+STACKWIDTH,x
	inx
	mva Y :STACKORIGIN,x
	jsr @expandSHORT2SMALL
	lda :STACKORIGIN,x
	sta MATH.MAX.@0201840000184000.X
	lda :STACKORIGIN+STACKWIDTH,x
	sta MATH.MAX.@0201840000184000.X+1
	dex
	lda :STACKORIGIN,x
	sta MATH.MAX.@0201840000184000.Y
	lda :STACKORIGIN+STACKWIDTH,x
	sta MATH.MAX.@0201840000184000.Y+1
	dex
	jsr MATH.MAX.@0201840000184000
	lda MATH.MAX.@0201840000184000.RESULT
	sta MATH.MIN.@0201840000184000.X
	lda MATH.MAX.@0201840000184000.RESULT+1
	sta MATH.MIN.@0201840000184000.X+1
	lda :STACKORIGIN,x
	sta MATH.MIN.@0201840000184000.Y
	lda :STACKORIGIN+STACKWIDTH,x
	sta MATH.MIN.@0201840000184000.Y+1
	dex
	jsr MATH.MIN.@0201840000184000
	lda MATH.MIN.@0201840000184000.RESULT
	sta CURSORY

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 151

	lda CURSORX
	add #$01
	sta :STACKORIGIN+9
	lda #$00
	sta :STACKORIGIN+STACKWIDTH+9
	lda :STACKORIGIN+9
	asl @
	rol :STACKORIGIN+STACKWIDTH+9
	asl @
	asl @
	add #$18
	sta C64.SPRITE1X

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 152

	lda CURSORY
	add #$01
	sta :STACKORIGIN+9
	lda #$00
	sta :STACKORIGIN+STACKWIDTH+9
	lda :STACKORIGIN+9
	asl @
	rol :STACKORIGIN+STACKWIDTH+9
	asl @
	asl @
	add #$32
	sta C64.SPRITE1Y

; ------------------------------------------------------------

X	= DATAORIGIN+$5E1B
Y	= DATAORIGIN+$5E1C

@VarData	= X
@VarDataSize	= 2

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	TOGGLEPIXEL					; PROCEDURE
	sta PRESSED

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 165

	jeq l_0B7C

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 167

	lda CURSORY
	add #$01
	sta :eax
	lda #$00
	adc #$00
	sta :eax+1
	lda #$28
	sta :ecx
	lda #$00
	sta :ecx+1
	.ifdef fmulinit
	fmulu_16
	els
	imulCX
	eif
	lda :eax
	add CURSORX
	sta :STACKORIGIN+9
	lda :eax+1
	adc #$00
	sta :STACKORIGIN+STACKWIDTH+9
	lda :STACKORIGIN+9
	add #$01
	sta :STACKORIGIN+9
	lda :STACKORIGIN+STACKWIDTH+9
	adc #$00
	sta :STACKORIGIN+STACKWIDTH+9
	lda SCREENRAM
	add :STACKORIGIN+9
	sta PIXELCHAR
	lda SCREENRAM+1
	adc :STACKORIGIN+STACKWIDTH+9
	sta PIXELCHAR+1

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 168

	mvy PIXELCHAR+1 :bp+1
	ldy PIXELCHAR
	lda (:bp),y
	cmp #$20
	jne l_0BA7

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 169

	mwy PIXELCHAR :bp2
	ldy #$00
	lda #$2A
	jmp l_0BB5
l_0BA7

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 171

	mwy PIXELCHAR :bp2
	ldy #$00
	lda #$20
l_0BB5
	sta (:bp2),y
l_0B7C

; ------------------------------------------------------------

PRESSED	= DATAORIGIN+$5E1D
PIXELCHAR	= DATAORIGIN+$5E1E

@VarData	= PRESSED
@VarDataSize	= 3

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	ENABLECURSOR					; PROCEDURE

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 181

	lda C64.ENABLESPRITES
	ora #$02
	sta C64.ENABLESPRITES

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 182

	lda #$00
	sta MOVECURSOR.X
	sta MOVECURSOR.Y
	jsr MOVECURSOR

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	DISABLECURSOR					; PROCEDURE

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 191

	lda C64.ENABLESPRITES
	and #$FD
	sta C64.ENABLESPRITES

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	LOG						; PROCEDURE | OVERLOAD
.local	@0101898600000021

; ------------------------------------------------------------

; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
; as Pointer
	lda :STACKORIGIN,x
	sta :bp2
	lda :STACKORIGIN+STACKWIDTH,x
	sta :bp2+1
	ldy #$20
	mva:rpl (:bp2),y adr.ENTRY,y-
	dex
@main

; optimize FAIL ('CRT.WHEREX', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 204

	jsr CRT.WHEREX
	lda CRT.WHEREX.RESULT
	sta CURRX

; optimize FAIL ('CRT.WHEREY', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 205

	jsr CRT.WHEREY
	lda CRT.WHEREY.RESULT
	sta CURRY

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 206

	ldy #$1F
	mva:rpl $0721,y $06F9,y-

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 207

	ldy #$1F
	mva:rpl $0749,y $0721,y-

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 208

	ldy #$1F
	mva:rpl $0771,y $0749,y-

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 209

	lda #$02
	sta CRT.GOTOXY.X
	lda #$17
	sta CRT.GOTOXY.Y
	jsr CRT.GOTOXY

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 210

	lda #$20
	sub adr.ENTRY
	jsr SYSTEM.SPACE
	inx
	mwy SYSTEM.SPACE.RESULT :bp2
	ldy #$00
	mva:rne (:bp2),y STRINGUTILS.STRCAT.@020189860000010001898600000100.adr.S2,y+
	inx
	mwy ENTRY :bp2
	ldy #$00
	mva:rne (:bp2),y STRINGUTILS.STRCAT.@020189860000010001898600000100.adr.S1,y+
	jsr STRINGUTILS.STRCAT.@020189860000010001898600000100
	@printSTRING STRINGUTILS.STRCAT.@020189860000010001898600000100.RESULT

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 211

	lda CURRX
	sta CRT.GOTOXY.X
	lda CURRY
	sta CRT.GOTOXY.Y
	jsr CRT.GOTOXY

; ------------------------------------------------------------

adr.ENTRY	= [DATAORIGIN+$5E20] .array [33]
.var ENTRY	= adr.ENTRY .word
CURRX	= DATAORIGIN+$5E41
CURRY	= DATAORIGIN+$5E42

@VarData	= ENTRY
@VarDataSize	= 35

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl
.endl							; overload

.local	LOG						; PROCEDURE | OVERLOAD
.local	@02018986000000210180000

; ------------------------------------------------------------

; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
; as Pointer
	lda :STACKORIGIN,x
	sta COLOR
	dex
	jmi @main
	dex
@main

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 225

	lda CURRENTCOLOR
	sta BAKCOLOR

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 226

	lda COLOR
	sta CURRENTCOLOR

; optimize FAIL ('LOG.@0101898600000021', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 227

	inx
	mva ENTRY :STACKORIGIN,x
	mva ENTRY+1 :STACKORIGIN+STACKWIDTH,x
	jsr LOG.@0101898600000021

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 228

	lda BAKCOLOR
	sta CURRENTCOLOR

; ------------------------------------------------------------

COLOR	= DATAORIGIN+$5E43
adr.ENTRY	= [DATAORIGIN+$5E44] .array [33]
.var ENTRY	= adr.ENTRY .word
BAKCOLOR	= DATAORIGIN+$5E65

@VarData	= COLOR
@VarDataSize	= 35

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl
.endl							; overload

.local	CONFIRM						; FUNCTION

; ------------------------------------------------------------

; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
; as Pointer
	lda :STACKORIGIN,x
	sta :bp2
	lda :STACKORIGIN+STACKWIDTH,x
	sta :bp2+1
	ldy #$20
	mva:rpl (:bp2),y adr.MSG,y-
	dex
@main

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 241

	lda #$00
	sta KEYBOARDBUFFERLENGTH

; optimize FAIL ('LOG.@02018986000000210180000', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 242

	inx
	mwy MSG :bp2
	ldy #$20
	mva:rpl (:bp2),y LOG.@02018986000000210180000.adr.ENTRY,y-
	inx
	mva #$0D :STACKORIGIN,x
	jsr LOG.@02018986000000210180000

; --- RepeatUntilProlog
l_0C33

; optimize FAIL ('CRT.KEYPRESSED', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 243

	jsr CRT.KEYPRESSED
	lda CRT.KEYPRESSED.RESULT
	jeq l_0C33

; optimize FAIL ('CRT.READKEY', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 244

	jsr CRT.READKEY
	ldy #1
	lda CRT.READKEY.RESULT
	cmp #$79
	beq @+
	dey
@
	tya
	sta RESULT
@exit

; ------------------------------------------------------------

adr.MSG	= [DATAORIGIN+$5E66] .array [33]
.var MSG	= adr.MSG .word
RESULT	= DATAORIGIN+$5E87

@VarData	= MSG
@VarDataSize	= 33

	rts						; ret
.endl

.local	LOADBACKGROUND					; PROCEDURE
	dex
	jmi @main

; ------------------------------------------------------------

; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
; as Pointer
	lda :STACKORIGIN,x
	sta DEVICE
	dex
@main

; optimize FAIL ('KERNAL.KERNALSETNAM.@0101898600000011', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 256

	inx
	mva FILENAME :STACKORIGIN,x
	mva FILENAME+1 :STACKORIGIN+STACKWIDTH,x
	jsr KERNAL.KERNALSETNAM.@0101898600000011

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 257

	lda #$01
	sta KERNAL.KERNALSETLFS.FD
	lda DEVICE
	sta KERNAL.KERNALSETLFS.DEVICE
	lda #$09
	sta KERNAL.KERNALSETLFS.SECONDARY
	jsr KERNAL.KERNALSETLFS

; optimize FAIL ('KERNAL.KERNALOPEN', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 258

	jsr KERNAL.KERNALOPEN
	lda KERNAL.KERNALOPEN.RESULT
	jeq l_0C5C

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 260

	lda #$01
	jsr KERNAL.KERNALCHKIN

; --- WhileProlog
	jmp l_0C61
l_0C62

; optimize FAIL ('KERNAL.KERNALCHRIN', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 262

	jsr KERNAL.KERNALCHRIN
	inx
	mva KERNAL.KERNALCHRIN.RESULT :STACKORIGIN,x
	@printCHAR
	dex
l_0C61

; optimize FAIL ('KERNAL.KERNALREADST', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 261

	jsr KERNAL.KERNALREADST
	lda KERNAL.KERNALREADST.RESULT
	jeq l_0C62
l_0C5C

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 264

	lda #$01
	jsr KERNAL.KERNALCLOSE

; optimize FAIL ('KERNAL.KERNALCLRCHN', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 265

	jsr KERNAL.KERNALCLRCHN

; ------------------------------------------------------------

adr.FILENAME	= [DATAORIGIN+$5E88] .array [17]
.var FILENAME	= adr.FILENAME .word
DEVICE	= DATAORIGIN+$5E99

@VarData	= FILENAME
@VarDataSize	= 18

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	LOADTRAININGBATCH				; PROCEDURE
	dex
	jmi @main

; ------------------------------------------------------------

; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
; as Pointer
	lda :STACKORIGIN,x
	sta DEVICE
	dex
	jmi @main

; ------------------------------------------------------------

; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
; as Pointer
	lda :STACKORIGIN,x
	sta DESTADDRESS
	lda :STACKORIGIN+STACKWIDTH,x
	sta DESTADDRESS+1
	dex
@main

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 281

	lda #$00
	sta I

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 282

	sta NEURALNET.BATCHLENGTH

; optimize FAIL ('KERNAL.KERNALSETNAM.@0101898600000011', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 283

	inx
	mva FILENAME :STACKORIGIN,x
	mva FILENAME+1 :STACKORIGIN+STACKWIDTH,x
	jsr KERNAL.KERNALSETNAM.@0101898600000011

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 284

	lda #$01
	sta KERNAL.KERNALSETLFS.FD
	lda DEVICE
	sta KERNAL.KERNALSETLFS.DEVICE
	lda #$09
	sta KERNAL.KERNALSETLFS.SECONDARY
	jsr KERNAL.KERNALSETLFS

; optimize FAIL ('KERNAL.KERNALOPEN', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 285

	jsr KERNAL.KERNALOPEN
	lda KERNAL.KERNALOPEN.RESULT
	jeq l_0C97

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 287

	lda #$01
	jsr KERNAL.KERNALCHKIN

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 288

	lda #$00
	sta J

l_0CA3
; --- ForToDoCondition
	lda J
	cmp #$64
	jcs l_0CB1

; optimize FAIL ('KERNAL.KERNALREADST', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 290

	jsr KERNAL.KERNALREADST
	lda KERNAL.KERNALREADST.RESULT
	jeq l_0CC1
	jmp b_0CA3
l_0CC1

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 293

	lda #$00
	sta I

l_0CCD
; --- ForToDoCondition
	lda I
	cmp #$21
	jcs l_0CDB

; optimize FAIL (1, /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 294

	inx
	mva I :STACKORIGIN,x
	mva #$00 :STACKORIGIN+STACKWIDTH,x
	inx
	mva #$64 :STACKORIGIN,x
	mva #$00 :STACKORIGIN+STACKWIDTH,x
	jsr imulWORD
	dex
	lda :eax
	add J
	sta :STACKORIGIN,x
	lda :eax+1
	adc #$00
	sta :STACKORIGIN+STACKWIDTH,x
	jsr KERNAL.KERNALCHRIN
	inx
	mva KERNAL.KERNALCHRIN.RESULT :STACKORIGIN,x
	lda DESTADDRESS
	add :STACKORIGIN-1,x
	tay
	lda DESTADDRESS+1
	adc :STACKORIGIN-1+STACKWIDTH,x
	sta :bp+1
	lda :STACKORIGIN,x
	sta (:bp),y
	dex
	dex

; --- ForToDoEpilog
	inc I
	jne l_0CCD
l_0CDB

; optimize FAIL (0, /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 295

	inc NEURALNET.BATCHLENGTH

; --- ForToDoEpilog
	inc J
	jne l_0CA3
l_0CB1
b_0CA3
l_0C97

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 298

	lda #$01
	jsr KERNAL.KERNALCLOSE

; optimize FAIL ('KERNAL.KERNALCLRCHN', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 299

	jsr KERNAL.KERNALCLRCHN

; ------------------------------------------------------------

adr.FILENAME	= [DATAORIGIN+$5E9A] .array [17]
.var FILENAME	= adr.FILENAME .word
DEVICE	= DATAORIGIN+$5EAB
DESTADDRESS	= DATAORIGIN+$5EAC
I	= DATAORIGIN+$5EAE
J	= DATAORIGIN+$5EAF

@VarData	= FILENAME
@VarDataSize	= 22

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	SAVENETWORKPARAMETERS				; PROCEDURE
	sta DEVICE

; optimize FAIL ('KERNAL.SAVEBYTES', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 310

	inx
	mva #$00 :STACKORIGIN,x
	mva #$38 :STACKORIGIN+STACKWIDTH,x
	inx
	mva NEURALNET.WEIGHTSHIDDEN :STACKORIGIN,x
	mva NEURALNET.WEIGHTSHIDDEN+1 :STACKORIGIN+STACKWIDTH,x
	inx
	mva DEVICE :STACKORIGIN,x
	inx
	ldy #$10
	mva:rpl $09BC,y KERNAL.SAVEBYTES.adr.FILENAME,y-
	jsr KERNAL.SAVEBYTES

; optimize FAIL ('KERNAL.SAVEBYTES', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 311

	inx
	mva #$30 :STACKORIGIN,x
	mva #$02 :STACKORIGIN+STACKWIDTH,x
	inx
	mva NEURALNET.WEIGHTSOUTPUT :STACKORIGIN,x
	mva NEURALNET.WEIGHTSOUTPUT+1 :STACKORIGIN+STACKWIDTH,x
	inx
	mva DEVICE :STACKORIGIN,x
	inx
	ldy #$10
	mva:rpl $09C6,y KERNAL.SAVEBYTES.adr.FILENAME,y-
	jsr KERNAL.SAVEBYTES

; optimize FAIL ('KERNAL.SAVEBYTES', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 312

	inx
	mva #$38 :STACKORIGIN,x
	mva #$00 :STACKORIGIN+STACKWIDTH,x
	inx
	mva NEURALNET.BIASESHIDDEN :STACKORIGIN,x
	mva NEURALNET.BIASESHIDDEN+1 :STACKORIGIN+STACKWIDTH,x
	inx
	mva DEVICE :STACKORIGIN,x
	inx
	ldy #$10
	mva:rpl $09D0,y KERNAL.SAVEBYTES.adr.FILENAME,y-
	jsr KERNAL.SAVEBYTES

; optimize FAIL ('KERNAL.SAVEBYTES', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 313

	inx
	mva #$28 :STACKORIGIN,x
	mva #$00 :STACKORIGIN+STACKWIDTH,x
	inx
	mva NEURALNET.BIASESOUTPUT :STACKORIGIN,x
	mva NEURALNET.BIASESOUTPUT+1 :STACKORIGIN+STACKWIDTH,x
	inx
	mva DEVICE :STACKORIGIN,x
	inx
	ldy #$10
	mva:rpl $09DA,y KERNAL.SAVEBYTES.adr.FILENAME,y-
	jsr KERNAL.SAVEBYTES

; ------------------------------------------------------------

DEVICE	= DATAORIGIN+$5EB0

@VarData	= DEVICE
@VarDataSize	= 1

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	LOADNETWORKPARAMETERS				; PROCEDURE
	sta DEVICE

; optimize FAIL ('KERNAL.LOADBYTES', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 324

	inx
	mva NEURALNET.WEIGHTSHIDDEN :STACKORIGIN,x
	mva NEURALNET.WEIGHTSHIDDEN+1 :STACKORIGIN+STACKWIDTH,x
	inx
	mva DEVICE :STACKORIGIN,x
	inx
	ldy #$10
	mva:rpl $09E4,y KERNAL.LOADBYTES.adr.FILENAME,y-
	jsr KERNAL.LOADBYTES

; optimize FAIL ('KERNAL.LOADBYTES', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 325

	inx
	mva NEURALNET.WEIGHTSOUTPUT :STACKORIGIN,x
	mva NEURALNET.WEIGHTSOUTPUT+1 :STACKORIGIN+STACKWIDTH,x
	inx
	mva DEVICE :STACKORIGIN,x
	inx
	ldy #$10
	mva:rpl $09EB,y KERNAL.LOADBYTES.adr.FILENAME,y-
	jsr KERNAL.LOADBYTES

; optimize FAIL ('KERNAL.LOADBYTES', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 326

	inx
	mva NEURALNET.BIASESHIDDEN :STACKORIGIN,x
	mva NEURALNET.BIASESHIDDEN+1 :STACKORIGIN+STACKWIDTH,x
	inx
	mva DEVICE :STACKORIGIN,x
	inx
	ldy #$10
	mva:rpl $09F2,y KERNAL.LOADBYTES.adr.FILENAME,y-
	jsr KERNAL.LOADBYTES

; optimize FAIL ('KERNAL.LOADBYTES', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 327

	inx
	mva NEURALNET.BIASESOUTPUT :STACKORIGIN,x
	mva NEURALNET.BIASESOUTPUT+1 :STACKORIGIN+STACKWIDTH,x
	inx
	mva DEVICE :STACKORIGIN,x
	inx
	ldy #$10
	mva:rpl $09F9,y KERNAL.LOADBYTES.adr.FILENAME,y-
	jsr KERNAL.LOADBYTES

; ------------------------------------------------------------

DEVICE	= DATAORIGIN+$5EB1

@VarData	= DEVICE
@VarDataSize	= 1

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	INIT						; PROCEDURE

; optimize FAIL ('SYSTEM.RANDOMIZE', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 336

	jsr SYSTEM.RANDOMIZE

; optimize FAIL ('CRT.CLRSCR', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 337

	jsr CRT.CLRSCR

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 338

	lda #$00
	sta C64.BORDERCOLOR

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 339

	sta C64.BACKGROUNDCOLOR0

; optimize FAIL ('LOADBACKGROUND', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 340

	inx
	mva #$08 :STACKORIGIN,x
	inx
	ldy #$10
	mva:rpl $0A00,y LOADBACKGROUND.adr.FILENAME,y-
	jsr LOADBACKGROUND

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 343

	lda #$01
	sta C64.ENABLESPRITES

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 344

	lda #$0D
	sta SPRITE0ADDRMULT

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 345

	lda #$0E
	sta SPRITE1ADDRMULT

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 346

	lda #$01
	sta C64.SPRITEYEXPANSION

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 347

	sta C64.SPRITEXEXPANSION

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 348

	sta C64.SPRITESXMSB

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 349

	lda #$31
	sta C64.SPRITE0X

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 350

	lda #$3A
	sta C64.SPRITE0Y

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 351

	lda #$0D
	sta C64.SPRITE0COLOR

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 352

	lda #$07
	sta C64.SPRITE1COLOR

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 354

	lda #$20
	sta C64.SPRITE1X

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 355

	lda #$3A
	sta C64.SPRITE1Y

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 356

	lda CURSORSPRITEDATA
	sta SYSTEM.MOVE.@03018100003000000300000.SOURCE
	lda CURSORSPRITEDATA+1
	sta SYSTEM.MOVE.@03018100003000000300000.SOURCE+1
	lda CURSORSPRITE
	sta SYSTEM.MOVE.@03018100003000000300000.DEST
	lda CURSORSPRITE+1
	sta SYSTEM.MOVE.@03018100003000000300000.DEST+1
	lda #$40
	sta SYSTEM.MOVE.@03018100003000000300000.COUNT
	lda #$00
	sta SYSTEM.MOVE.@03018100003000000300000.COUNT+1
	.LOCAL +MAIN.SYSTEM.MOVE.@03018100003000000300000
	m@INLINE
	.ENDL

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 357

	lda #$05
	sta CURRENTCOLOR

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	DRAWDIGIT					; PROCEDURE

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 372

	lda #$00
	sta DY

l_0D9B
; --- ForToDoCondition
	lda DY
	cmp #$10
	jcs l_0DA9

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 373

	lda #$00
	sta DX

l_0DB2
; --- ForToDoCondition
	lda DX
	cmp #$02
	jcs l_0DC0

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 374

	lda DY
	asl @
	add DX
	add DY
	sta :STACKORIGIN+9
	lda DY
	asl @
	add DX
	mwy INPUT :bp2
	tay
	lda (:bp2),y
	ldy :STACKORIGIN+9
	sta adr.DIGITSPRITE,y

; --- ForToDoEpilog
	inc DX
	jne l_0DB2
l_0DC0

; --- ForToDoEpilog
	inc DY
	jne l_0D9B
l_0DA9

; ------------------------------------------------------------

INPUT	= DATAORIGIN+$5EB2
DX	= DATAORIGIN+$5EB4
DY	= DATAORIGIN+$5EB5

@VarData	= INPUT
@VarDataSize	= 4

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	CLEARDIGIT					; PROCEDURE

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 387

	lda #$00
	sta DY

l_0DF7
; --- ForToDoCondition
	lda DY
	cmp #$10
	jcs l_0E05

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 388

	lda #$00
	sta DX

l_0E0E
; --- ForToDoCondition
	lda DX
	cmp #$02
	jcs l_0E1C

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 389

	lda #$00
	sta :STACKORIGIN+STACKWIDTH+9
	lda DY
	asl @
	rol :STACKORIGIN+STACKWIDTH+9
	add DX
	add DY
	sta :STACKORIGIN+9
	lda :STACKORIGIN+STACKWIDTH+9
	adc #$00
	sta :STACKORIGIN+STACKWIDTH+9
	lda :STACKORIGIN+9
	add #$00
	tay
	lda :STACKORIGIN+STACKWIDTH+9
	adc #$00
	lda #$00
	sta adr.DIGITSPRITE,y

; --- ForToDoEpilog
	inc DX
	jne l_0E0E
l_0E1C

; --- ForToDoEpilog
	inc DY
	jne l_0DF7
l_0E05

; ------------------------------------------------------------

DX	= DATAORIGIN+$5EB6
DY	= DATAORIGIN+$5EB7

@VarData	= DX
@VarDataSize	= 2

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	SHUFFLEBATCHINDEXES				; PROCEDURE

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 400

	lda #$00
	sta I

l_0E44
; --- ForToDoCondition
	lda I
	cmp #$10
	jcs l_0E52

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 402

?volatile:
	lda C64.RANDOM
	and #$0F
	sta J

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 403

	ldy I
	lda adr.BATCHINDEXES,y
	sta TMP

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 404

	ldy J
	lda adr.BATCHINDEXES,y
	ldy I
	sta adr.BATCHINDEXES,y

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 405

	ldy J
	lda TMP
	sta adr.BATCHINDEXES,y

; --- ForToDoEpilog
	inc I
	jne l_0E44
l_0E52

; ------------------------------------------------------------

I	= DATAORIGIN+$5EB8
TMP	= DATAORIGIN+$5EB9
J	= DATAORIGIN+$5EBA

@VarData	= I
@VarDataSize	= 3

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	C64RANDOMIZE					; PROCEDURE | ASSEMBLER

; -------------------  ASM Block 00000103  -------------------

  lda #$ff  ; maximum frequency value
  sta $D40E ; voice 3 frequency low byte
  sta $D40F ; voice 3 frequency high byte
  lda #$80  ; noise waveform, gate bit off
  sta $D412 ; voice 3 control register

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	CLEARSCREENAREA					; PROCEDURE

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 435

	lda Y1
	sta Y

l_0E91
; --- ForToDoCondition
	lda Y
	cmp Y2
	scc
	jne l_0E9F

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 436

	lda X1
	sta X

l_0EAC
; --- ForToDoCondition
	lda X
	cmp X2
	scc
	jne l_0EBA

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 437

	lda Y
	jsr @mul40
	add X
	tay
	lda #$04
	adc :eax+1
	sta :bp+1
	lda #$20
	sta (:bp),y

; --- ForToDoEpilog
	inc X
	jne l_0EAC
l_0EBA

; --- ForToDoEpilog
	inc Y
	jne l_0E91
l_0E9F

; ------------------------------------------------------------

X1	= DATAORIGIN+$5EBB
Y1	= DATAORIGIN+$5EBC
X2	= DATAORIGIN+$5EBD
Y2	= DATAORIGIN+$5EBE
X	= DATAORIGIN+$5EBF
Y	= DATAORIGIN+$5EC0

@VarData	= X1
@VarDataSize	= 6

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	DISPLAYMENU					; PROCEDURE

; ------------------------------------------------------------

; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
; as Pointer
	lda :STACKORIGIN,x
	sta :bp2
	lda :STACKORIGIN+STACKWIDTH,x
	sta :bp2+1
	ldy #$09
	mva:rpl (:bp2),y adr.MENUADDR,y-
	dex
@main

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 447

	lda #$13
	sta CLEARSCREENAREA.X1
	lda #$07
	sta CLEARSCREENAREA.Y1
	lda #$26
	sta CLEARSCREENAREA.X2
	lda #$10
	sta CLEARSCREENAREA.Y2
	jsr CLEARSCREENAREA

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 448

	lda #$00
	sta I

l_0EEA
; --- ForToDoCondition
	lda I
	cmp #$05
	jcs l_0EF8

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 450

	lda #$08
	adc I
	sta CRT.GOTOXY.Y
	lda #$14
	sta CRT.GOTOXY.X
	jsr CRT.GOTOXY

; optimize FAIL ('@print', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 451

	inx
	lda I
	asl @
	tay
	lda adr.MENUADDR+1,y
	sta :STACKORIGIN+STACKWIDTH,x
	lda adr.MENUADDR,y
	ldy :STACKORIGIN+STACKWIDTH,x
	jsr @printSTRING
	dex

; --- ForToDoEpilog
	inc I
	jne l_0EEA
l_0EF8

; ------------------------------------------------------------

adr.MENUADDR	= [DATAORIGIN+$5EC1] .array [5] .word
.var MENUADDR	= adr.MENUADDR .word
I	= DATAORIGIN+$5ECB

@VarData	= MENUADDR
@VarDataSize	= 11

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	CANVASTOINPUT					; PROCEDURE

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 465

	lda #$00
	sta BYTEVALUE

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 466

	sta Y

l_0F1C
; --- ForToDoCondition
	lda Y
	cmp #$10
	jcs l_0F2A

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 467

	lda #$00
	sta X

l_0F33
; --- ForToDoCondition
	lda X
	cmp #$10
	jcs l_0F41

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 469

	lda #$00
	sta :STACKORIGIN+STACKWIDTH+9
	lda Y
	asl @
	rol :STACKORIGIN+STACKWIDTH+9
	asl @
	rol :STACKORIGIN+STACKWIDTH+9
	asl @
	asl @
	add X
	sta I

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 470

	lda #$01
	add Y
	sta :eax
	lda #$00
	adc #$00
	sta :eax+1
	lda #$28
	sta :ecx
	lda #$00
	sta :ecx+1
	.ifdef fmulinit
	fmulu_16
	els
	imulCX
	eif
	lda :eax
	add X
	sta :bp2
	lda :eax+1
	adc #$04
	sta :bp2+1
	ldy #$01
	lda (:bp2),y
	cmp #$2A
	jne l_0F78

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 471

	lda I
	and #$07
	sta :STACKORIGIN+12
	lda #$07
	sub :STACKORIGIN+12
	sta :STACKORIGIN+11
	lda #$00
	sta :STACKORIGIN+STACKWIDTH*3+10
	sta :STACKORIGIN+STACKWIDTH*2+10
	sta :STACKORIGIN+STACKWIDTH+10
	lda #$01
	ldy :STACKORIGIN+11
	beq l_0002_e
l_0002_b
	asl @
	rol :STACKORIGIN+STACKWIDTH+10
	rol :STACKORIGIN+STACKWIDTH*2+10
	rol :STACKORIGIN+STACKWIDTH*3+10
	dey
	bne l_0002_b
l_0002_e
	ora BYTEVALUE
	sta BYTEVALUE
l_0F78

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 472

	lda I
	and #$07
	cmp #$07
	jne l_0FA9

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 474

	lda I
	lsr @
	lsr @
	lsr @
	mwy INPUT :bp2
	tay
	lda BYTEVALUE
	sta (:bp2),y

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 475

	lda #$00
	sta BYTEVALUE
l_0FA9

; --- ForToDoEpilog
	inc X
	jne l_0F33
l_0F41

; --- ForToDoEpilog
	inc Y
	jne l_0F1C
l_0F2A

; ------------------------------------------------------------

INPUT	= DATAORIGIN+$5ECC
BYTEVALUE	= DATAORIGIN+$5ECE
I	= DATAORIGIN+$5ECF
X	= DATAORIGIN+$5ED0
Y	= DATAORIGIN+$5ED1

@VarData	= INPUT
@VarDataSize	= 6

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	DRAWHIDDENACTIVATIONS				; PROCEDURE

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 489

	lda CURRENTCOLOR
	sta BAKCOLOR

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 490

	lda #$14
	sta CRT.GOTOXY.X
	lda #$03
	sta CRT.GOTOXY.Y
	jsr CRT.GOTOXY
	lda #$0D
	sta CURRENTCOLOR

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 491

	lda #$00
	sta I

l_0FE1
; --- ForToDoCondition
	lda I
	cmp #$0E
	jcs l_0FEF

; optimize FAIL ('@print', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 492

	inx
	lda I
	asl @
	asl @
	tay
	lda NEURALNET.adr.ACTIVATIONSHIDDEN,y
	sta :STACKORIGIN,x
	lda NEURALNET.adr.ACTIVATIONSHIDDEN+1,y
	sta :STACKORIGIN+STACKWIDTH,x
	lda NEURALNET.adr.ACTIVATIONSHIDDEN+2,y
	sta :STACKORIGIN+STACKWIDTH*2,x
	lda NEURALNET.adr.ACTIVATIONSHIDDEN+3,y
	sta :STACKORIGIN+STACKWIDTH*3,x
	inx
	lda #$00
	sta :FP2MAN0
	lda #$00
	sta :FP2MAN1
	lda #$00
	sta :FP2MAN2
	lda #$41
	sta :FP2MAN3
	lda :STACKORIGIN-1,x
	sta :FP1MAN0
	lda :STACKORIGIN-1+STACKWIDTH,x
	sta :FP1MAN1
	lda :STACKORIGIN-1+STACKWIDTH*2,x
	sta :FP1MAN2
	lda :STACKORIGIN-1+STACKWIDTH*3,x
	sta :FP1MAN3
	jsr @FMUL
	dex
	lda :FPMAN0
	sta :FP2MAN0
	lda :FPMAN1
	sta :FP2MAN1
	lda :FPMAN2
	sta :FP2MAN2
	lda :FPMAN3
	sta :FP2MAN3
	jsr @FROUND
	lda :FPMAN0
	sta :STACKORIGIN,x
	lda :FPMAN1
	sta :STACKORIGIN+STACKWIDTH,x
	lda :FPMAN2
	sta :STACKORIGIN+STACKWIDTH*2,x
	lda :FPMAN3
	sta :STACKORIGIN+STACKWIDTH*3,x
	lda :STACKORIGIN+STACKWIDTH,x
	asl :STACKORIGIN,x
	rol @
	sta :STACKORIGIN+STACKWIDTH,x
	ldy :STACKORIGIN,x
	lda adr.ACTIVATION_HISTOGRAM_LEVELS+1,y
	sta :STACKORIGIN+STACKWIDTH,x
	lda adr.ACTIVATION_HISTOGRAM_LEVELS,y
	ldy :STACKORIGIN+STACKWIDTH,x
	jsr @printSTRING
	dex

; --- ForToDoEpilog
	inc I
	jne l_0FE1
l_0FEF

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 493

	lda BAKCOLOR
	sta CURRENTCOLOR

; ------------------------------------------------------------

I	= DATAORIGIN+$5ED2
BAKCOLOR	= DATAORIGIN+$5ED3

@VarData	= I
@VarDataSize	= 2

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	DRAWOUTPUTACTIVATIONS				; PROCEDURE

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 505

	lda CURRENTCOLOR
	sta BAKCOLOR

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 506

	lda #$14
	sta CRT.GOTOXY.X
	lda #$05
	sta CRT.GOTOXY.Y
	jsr CRT.GOTOXY
	lda #$0D
	sta CURRENTCOLOR

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 507

	lda #$00
	sta I

l_101E
; --- ForToDoCondition
	lda I
	cmp #$0A
	jcs l_102C

; optimize FAIL ('@print', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 508

	inx
	lda I
	asl @
	asl @
	tay
	lda NEURALNET.adr.ACTIVATIONSOUTPUT,y
	sta :STACKORIGIN,x
	lda NEURALNET.adr.ACTIVATIONSOUTPUT+1,y
	sta :STACKORIGIN+STACKWIDTH,x
	lda NEURALNET.adr.ACTIVATIONSOUTPUT+2,y
	sta :STACKORIGIN+STACKWIDTH*2,x
	lda NEURALNET.adr.ACTIVATIONSOUTPUT+3,y
	sta :STACKORIGIN+STACKWIDTH*3,x
	inx
	lda #$00
	sta :FP2MAN0
	lda #$00
	sta :FP2MAN1
	lda #$00
	sta :FP2MAN2
	lda #$41
	sta :FP2MAN3
	lda :STACKORIGIN-1,x
	sta :FP1MAN0
	lda :STACKORIGIN-1+STACKWIDTH,x
	sta :FP1MAN1
	lda :STACKORIGIN-1+STACKWIDTH*2,x
	sta :FP1MAN2
	lda :STACKORIGIN-1+STACKWIDTH*3,x
	sta :FP1MAN3
	jsr @FMUL
	dex
	lda :FPMAN0
	sta :FP2MAN0
	lda :FPMAN1
	sta :FP2MAN1
	lda :FPMAN2
	sta :FP2MAN2
	lda :FPMAN3
	sta :FP2MAN3
	jsr @FROUND
	lda :FPMAN0
	sta :STACKORIGIN,x
	lda :FPMAN1
	sta :STACKORIGIN+STACKWIDTH,x
	lda :FPMAN2
	sta :STACKORIGIN+STACKWIDTH*2,x
	lda :FPMAN3
	sta :STACKORIGIN+STACKWIDTH*3,x
	lda :STACKORIGIN+STACKWIDTH,x
	asl :STACKORIGIN,x
	rol @
	sta :STACKORIGIN+STACKWIDTH,x
	ldy :STACKORIGIN,x
	lda adr.ACTIVATION_HISTOGRAM_LEVELS+1,y
	sta :STACKORIGIN+STACKWIDTH,x
	lda adr.ACTIVATION_HISTOGRAM_LEVELS,y
	ldy :STACKORIGIN+STACKWIDTH,x
	jsr @printSTRING
	dex

; --- ForToDoEpilog
	inc I
	jne l_101E
l_102C

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 509

	lda BAKCOLOR
	sta CURRENTCOLOR

; ------------------------------------------------------------

I	= DATAORIGIN+$5ED5
BAKCOLOR	= DATAORIGIN+$5ED6

@VarData	= I
@VarDataSize	= 2

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	DISPLAYCHAR					; PROCEDURE
	sta DIGIT

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 520

	lda #$01
	sta CLEARSCREENAREA.X1
	sta CLEARSCREENAREA.Y1
	lda #$10
	sta CLEARSCREENAREA.X2
	sta CLEARSCREENAREA.Y2
	jsr CLEARSCREENAREA

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 521

	lda C64.CIACRA
	and #$FE
	sta C64.CIACRA

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 522

	lda C64.R6510
	and #$FB
	sta C64.R6510

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 524

	lda #$00
	tay

l_1067
; --- ForToDoCondition
	sty ROW
	cpy #$08
	jcs l_1075

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 525

	lda #$30
	adc DIGIT
	sta :eax
	lda #$00
	adc #$00
	sta :eax+1
	lda #$08
	sta :ecx
	lda #$00
	sta :ecx+1
	.ifdef fmulinit
	fmulu_16
	els
	imulCX
	eif
	lda ROW
	add :eax
	tay
	lda #$D0
	adc :eax+1
	sta :bp+1
	lda (:bp),y
	ldy ROW
	sta adr.CHARDATA,y

; --- ForToDoEpilog
	iny
	jne l_1067
l_1075

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 526

	lda C64.R6510
	ora #$04
	sta C64.R6510

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 527

	lda C64.CIACRA
	ora #$01
	sta C64.CIACRA

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 530

	lda #$00
	sta ROW

l_10B3
; --- ForToDoCondition
	lda ROW
	cmp #$08
	jcs l_10C1

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 531

	lda #$00
	sta BIT

l_10CA
; --- ForToDoCondition
	lda BIT
	cmp #$08
	jcs l_10D8

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 532

	ldy ROW
	lda adr.CHARDATA,y
	sta :STACKORIGIN+9
	lda #$07
	sub BIT
	sta :STACKORIGIN+11
	lda #$00
	sta :STACKORIGIN+STACKWIDTH*3+10
	sta :STACKORIGIN+STACKWIDTH*2+10
	sta :STACKORIGIN+STACKWIDTH+10
	lda #$01
	ldy :STACKORIGIN+11
	beq l_0003_e
l_0003_b
	asl @
	rol :STACKORIGIN+STACKWIDTH+10
	rol :STACKORIGIN+STACKWIDTH*2+10
	rol :STACKORIGIN+STACKWIDTH*3+10
	dey
	bne l_0003_b
l_0003_e
	and :STACKORIGIN+9
	jeq l_10FB

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 534

	lda #$00
	sta :STACKORIGIN+STACKWIDTH+10
	lda ROW
	asl @
	rol :STACKORIGIN+STACKWIDTH+10
	add #$01
	sta :eax
	lda #$00
	adc :STACKORIGIN+STACKWIDTH+10
	sta :eax+1
	lda #$28
	sta :ecx
	lda #$00
	sta :ecx+1
	.ifdef fmulinit
	fmulu_16
	els
	imulCX
	eif
	lda #$00
	sta :STACKORIGIN+STACKWIDTH+11
	lda BIT
	asl @
	rol :STACKORIGIN+STACKWIDTH+11
	add #$01
	sta :STACKORIGIN+10
	lda #$00
	adc :STACKORIGIN+STACKWIDTH+11
	sta :STACKORIGIN+STACKWIDTH+10
	lda :eax
	add :STACKORIGIN+10
	sta :STACKORIGIN+9
	lda :eax+1
	adc :STACKORIGIN+STACKWIDTH+10
	sta :STACKORIGIN+STACKWIDTH+9
	lda #$00
	add :STACKORIGIN+9
	tay
	lda #$04
	adc :STACKORIGIN+STACKWIDTH+9
	sta :bp+1
	lda #$2A
	sta (:bp),y

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 535

	lda #$00
	sta :STACKORIGIN+STACKWIDTH+10
	lda ROW
	asl @
	rol :STACKORIGIN+STACKWIDTH+10
	add #$01
	sta :eax
	lda #$00
	adc :STACKORIGIN+STACKWIDTH+10
	sta :eax+1
	inc :eax
	sne
	inc :eax+1
	lda #$28
	sta :ecx
	lda #$00
	sta :ecx+1
	.ifdef fmulinit
	fmulu_16
	els
	imulCX
	eif
	lda #$00
	sta :STACKORIGIN+STACKWIDTH+11
	lda BIT
	asl @
	rol :STACKORIGIN+STACKWIDTH+11
	add #$01
	sta :STACKORIGIN+10
	lda #$00
	adc :STACKORIGIN+STACKWIDTH+11
	sta :STACKORIGIN+STACKWIDTH+10
	lda :eax
	add :STACKORIGIN+10
	sta :STACKORIGIN+9
	lda :eax+1
	adc :STACKORIGIN+STACKWIDTH+10
	sta :STACKORIGIN+STACKWIDTH+9
	lda #$00
	add :STACKORIGIN+9
	tay
	lda #$04
	adc :STACKORIGIN+STACKWIDTH+9
	sta :bp+1
	lda #$2A
	sta (:bp),y

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 536

	lda #$00
	sta :STACKORIGIN+STACKWIDTH+10
	lda ROW
	asl @
	rol :STACKORIGIN+STACKWIDTH+10
	add #$01
	sta :eax
	lda #$00
	adc :STACKORIGIN+STACKWIDTH+10
	sta :eax+1
	lda #$28
	sta :ecx
	lda #$00
	sta :ecx+1
	.ifdef fmulinit
	fmulu_16
	els
	imulCX
	eif
	lda #$00
	sta :STACKORIGIN+STACKWIDTH+11
	lda BIT
	asl @
	rol :STACKORIGIN+STACKWIDTH+11
	add #$01
	sta :STACKORIGIN+10
	lda #$00
	adc :STACKORIGIN+STACKWIDTH+11
	sta :STACKORIGIN+STACKWIDTH+10
	lda :STACKORIGIN+10
	add #$01
	sta :STACKORIGIN+10
	lda :STACKORIGIN+STACKWIDTH+10
	adc #$00
	sta :STACKORIGIN+STACKWIDTH+10
	lda :eax
	add :STACKORIGIN+10
	sta :STACKORIGIN+9
	lda :eax+1
	adc :STACKORIGIN+STACKWIDTH+10
	sta :STACKORIGIN+STACKWIDTH+9
	lda #$00
	add :STACKORIGIN+9
	tay
	lda #$04
	adc :STACKORIGIN+STACKWIDTH+9
	sta :bp+1
	lda #$2A
	sta (:bp),y

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 537

	lda #$00
	sta :STACKORIGIN+STACKWIDTH+10
	lda ROW
	asl @
	rol :STACKORIGIN+STACKWIDTH+10
	add #$01
	sta :eax
	lda #$00
	adc :STACKORIGIN+STACKWIDTH+10
	sta :eax+1
	inc :eax
	sne
	inc :eax+1
	lda #$28
	sta :ecx
	lda #$00
	sta :ecx+1
	.ifdef fmulinit
	fmulu_16
	els
	imulCX
	eif
	lda #$00
	sta :STACKORIGIN+STACKWIDTH+11
	lda BIT
	asl @
	rol :STACKORIGIN+STACKWIDTH+11
	add #$01
	sta :STACKORIGIN+10
	lda #$00
	adc :STACKORIGIN+STACKWIDTH+11
	sta :STACKORIGIN+STACKWIDTH+10
	lda :STACKORIGIN+10
	add #$01
	sta :STACKORIGIN+10
	lda :STACKORIGIN+STACKWIDTH+10
	adc #$00
	sta :STACKORIGIN+STACKWIDTH+10
	lda :eax
	add :STACKORIGIN+10
	sta :STACKORIGIN+9
	lda :eax+1
	adc :STACKORIGIN+STACKWIDTH+10
	sta :STACKORIGIN+STACKWIDTH+9
	lda #$00
	add :STACKORIGIN+9
	tay
	lda #$04
	adc :STACKORIGIN+STACKWIDTH+9
	sta :bp+1
	lda #$2A
	sta (:bp),y
l_10FB

; --- ForToDoEpilog
	inc BIT
	jne l_10CA
l_10D8

; --- ForToDoEpilog
	inc ROW
	jne l_10B3
l_10C1

; ------------------------------------------------------------

DIGIT	= DATAORIGIN+$5ED8

@VarData	= DIGIT
@VarDataSize	= 1

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	DRAWANDPREDICT					; PROCEDURE

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 550

	lda #$00
	sta DONE

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 551

	lda #$01
	sta CLEARSCREENAREA.X1
	sta CLEARSCREENAREA.Y1
	lda #$10
	sta CLEARSCREENAREA.X2
	sta CLEARSCREENAREA.Y2
	jsr CLEARSCREENAREA

; optimize FAIL ('ENABLECURSOR', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 552

	jsr ENABLECURSOR

; --- RepeatUntilProlog
l_11AB

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 554

	lda INPUTMODE
	jne l_11BD

; optimize FAIL ('JOYSTICK.READJOYSTICK2', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 556

	jsr JOYSTICK.READJOYSTICK2

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 557

	lda CURSORY
	add JOYSTICK.INPUTDY
	sta MOVECURSOR.Y
	lda CURSORX
	add JOYSTICK.INPUTDX
	sta MOVECURSOR.X
	jsr MOVECURSOR

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 558

	lda JOYSTICK.BUTTONPRESSED
	jmp l_11DF
l_11BD

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 560

	lda INPUTMODE
	cmp #$01
	jne l_11F1

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 562

	lda CURSORX
	sta OLDCURSORX

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 563

	lda CURSORY
	sta OLDCURSORY

; optimize FAIL ('LIGHTPEN.CHECKPEN', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 564

	jsr LIGHTPEN.CHECKPEN

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 565

	ldy LIGHTPEN.PENCHARX
	dey
	sty CURSORX

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 566

	ldy LIGHTPEN.PENCHARY
	dey
	sty CURSORY

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 567

	lda CURSORX
	sta MOVECURSOR.X
	lda CURSORY
	sta MOVECURSOR.Y
	jsr MOVECURSOR

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 568

	lda CURSORX
	cmp OLDCURSORX
	seq
	jmp @+
	lda CURSORY
	cmp OLDCURSORY
	seq
	jmp @+
	lda:seq #$00
@	lda #$01
	sta CURSORMOVED

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 569

l_11DF
	jsr TOGGLEPIXEL
l_11F1

; optimize FAIL ('CRT.KEYPRESSED', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 571

	jsr CRT.KEYPRESSED
	lda CRT.KEYPRESSED.RESULT
	jeq l_1246

; optimize FAIL ('CRT.READKEY', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 573

	jsr CRT.READKEY
	lda CRT.READKEY.RESULT
	sta C

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 574

	sta @CASETMP_0007
	cmp #$A5
	jne l_1256
@

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 575

	lda #$00
	sta INPUTMODE
	inx
	mva #$0F :STACKORIGIN,x
	jmp s_1269
l_1256
	cmp #$A9
	jne l_1263

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 576

	lda #$01
	sta INPUTMODE
	inx
	mva #$24 :STACKORIGIN,x
s_1269
	mva #$0A :STACKORIGIN+STACKWIDTH,x
	jsr LOG.@0101898600000021
	jmp a_0007
l_1263
	cmp #$A7
	jne l_1270

; optimize FAIL ('CONFIRM', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 577

	inx
	mva #$3A :STACKORIGIN,x
	mva #$0A :STACKORIGIN+STACKWIDTH,x
	jsr CONFIRM
	lda CONFIRM.RESULT
	sta DONE
l_1270
a_0007
l_1246

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 580

	lda #$05
	sta SYSTEM.PAUSE.@010181000.N
	lda #$00
	sta SYSTEM.PAUSE.@010181000.N+1
	jsr SYSTEM.PAUSE.@010181000

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 581

	lda DONE
	jeq l_11AB

; optimize FAIL ('DISABLECURSOR', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 582

	jsr DISABLECURSOR

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 583

	lda CURRINPUT
	sta CANVASTOINPUT.INPUT
	lda CURRINPUT+1
	sta CANVASTOINPUT.INPUT+1
	jsr CANVASTOINPUT

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 584

	lda CURRINPUT
	sta DRAWDIGIT.INPUT
	lda CURRINPUT+1
	sta DRAWDIGIT.INPUT+1
	jsr DRAWDIGIT

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 585

	lda CURRINPUT
	sta NEURALNET.PREDICT.INPUT
	lda CURRINPUT+1
	sta NEURALNET.PREDICT.INPUT+1
	jsr NEURALNET.PREDICT
	lda NEURALNET.PREDICT.RESULT
	sta GUESSEDDIGIT

; optimize FAIL ('DRAWHIDDENACTIVATIONS', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 586

	jsr DRAWHIDDENACTIVATIONS

; optimize FAIL ('DRAWOUTPUTACTIVATIONS', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 587

	jsr DRAWOUTPUTACTIVATIONS

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 588

	lda GUESSEDDIGIT
	jsr DISPLAYCHAR

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 589

	lda GUESSEDDIGIT
	jsr SYSUTILS.BYTETOSTR
	inx
	mwy SYSUTILS.BYTETOSTR.RESULT :bp2
	ldy #$00
	mva:rne (:bp2),y STRINGUTILS.STRCAT.@020189860000010001898600000100.adr.S2,y+
	inx
	ldy #$00
	mva:rne $0A4E,y STRINGUTILS.STRCAT.@020189860000010001898600000100.adr.S1,y+
	jsr STRINGUTILS.STRCAT.@020189860000010001898600000100
	inx
	mva STRINGUTILS.STRCAT.@020189860000010001898600000100.RESULT :STACKORIGIN,x
	mva STRINGUTILS.STRCAT.@020189860000010001898600000100.RESULT+1 :STACKORIGIN+STACKWIDTH,x
	jsr LOG.@0101898600000021

; optimize FAIL ('CONFIRM', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 590

	inx
	mva #$63 :STACKORIGIN,x
	mva #$0A :STACKORIGIN+STACKWIDTH,x
	jsr CONFIRM
	lda CONFIRM.RESULT
	jne l_12AD

; --- RepeatUntilProlog
l_12AF

; optimize FAIL ('LOG.@0101898600000021', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 593

	inx
	mva #$75 :STACKORIGIN,x
	mva #$0A :STACKORIGIN+STACKWIDTH,x
	jsr LOG.@0101898600000021

; --- RepeatUntilProlog
l_12B2

; optimize FAIL ('CRT.KEYPRESSED', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 594

	jsr CRT.KEYPRESSED
	lda CRT.KEYPRESSED.RESULT
	jeq l_12B2

; optimize FAIL ('CRT.READKEY', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 595

	jsr CRT.READKEY
	lda CRT.READKEY.RESULT
	jsr SYSUTILS.STRTOINT.@010286000
	lda SYSUTILS.STRTOINT.@010286000.RESULT
	sta GUESSEDDIGIT

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 596

	jeq l_12D4s
	cmp #$09
	jcs l_12D4s
	lda:sne #$01
l_12D4s	lda #$00
	sta ISNUMBER

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 597

	jeq l_12AF
l_12AD

; optimize FAIL ('LOG.@0101898600000021', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 599

	inx
	mva #$8E :STACKORIGIN,x
	mva #$0A :STACKORIGIN+STACKWIDTH,x
	jsr LOG.@0101898600000021

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 600

	lda CURRINPUT
	sta NEURALNET.TRAIN.INPUT
	lda CURRINPUT+1
	sta NEURALNET.TRAIN.INPUT+1
	lda GUESSEDDIGIT
	sta NEURALNET.TRAIN.OUTPUT
	jsr NEURALNET.TRAIN

; ------------------------------------------------------------

C	= DATAORIGIN+$5ED9
GUESSEDDIGIT	= DATAORIGIN+$5EDA
DONE	= DATAORIGIN+$5EDB
ISNUMBER	= DATAORIGIN+$5EDC
@CASETMP_0007	= DATAORIGIN+$5EDD

@VarData	= C
@VarDataSize	= 5

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	TRAINLOOP					; PROCEDURE
	sta EPOCHS

; optimize FAIL ('LOG.@0101898600000021', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 615

	inx
	mva #$A3 :STACKORIGIN,x
	mva #$0A :STACKORIGIN+STACKWIDTH,x
	jsr LOG.@0101898600000021

; optimize FAIL ('LOG.@0101898600000021', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 616

	inx
	mva #$BE :STACKORIGIN,x
	mva #$0A :STACKORIGIN+STACKWIDTH,x
	jsr LOG.@0101898600000021

; optimize FAIL ('LOG.@0101898600000021', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 617

	inx
	mva #$D0 :STACKORIGIN,x
	mva #$0A :STACKORIGIN+STACKWIDTH,x
	jsr LOG.@0101898600000021

; optimize FAIL ('NEURALNET.INITNETWORK', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 618

	jsr NEURALNET.INITNETWORK

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 619

	lda #$39
	sta :ecx
	lda #$06
	sta :ecx+1
	lda EPOCHS
	sta :eax
	lda #$00
	sta :eax+1
	.ifdef fmulinit
	fmulu_16
	els
	imulCX_AL
	eif
	lda :eax
	sta TOTAL
	lda :eax+1
	sta TOTAL+1

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 620

	lda #$00
	sta EPOCH
	ldy EPOCHS
	dey
	sty @FORTMP_1306_0

l_1309
; --- ForToDoCondition
	lda @FORTMP_1306_0::#$00
	cmp EPOCH
	jcc l_1317

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 622

	lda STOP
	jeq l_1323
	jmp b_1309
l_1323

; optimize FAIL ('SHUFFLEBATCHINDEXES', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 623

	jsr SHUFFLEBATCHINDEXES

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 624

	lda #$00
	sta CORRECT
	sta CORRECT+1
	sta PROCESSED
	sta PROCESSED+1

; optimize FAIL (0, /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 625

	lda #-16
	sta l_1330+1
l_1330
	ldy #$00
	lda adr.BATCHINDEXES+16-256,y
	sta BATCHIDX

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 627

	lda STOP
	jeq l_133C
	jmp b_1330
l_133C

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 628

	lda BATCHIDX
	sta SYSUTILS.INTTOHEX.VALUE
	lda #$00
	sta SYSUTILS.INTTOHEX.VALUE+1
	sta SYSUTILS.INTTOHEX.VALUE+2
	sta SYSUTILS.INTTOHEX.VALUE+3
	lda #$02
	sta SYSUTILS.INTTOHEX.DIGITS
	jsr SYSUTILS.INTTOHEX
	inx
	mwy SYSUTILS.INTTOHEX.RESULT :bp2
	ldy #$00
	mva:rne (:bp2),y STRINGUTILS.STRCAT.@020189860000010001898600000100.adr.S2,y+
	inx
	ldy #$00
	mva:rne $0AE0,y STRINGUTILS.STRCAT.@020189860000010001898600000100.adr.S1,y+
	jsr STRINGUTILS.STRCAT.@020189860000010001898600000100
	inx
	lda STRINGUTILS.STRCAT.@020189860000010001898600000100.RESULT
	sta @move.src
	lda STRINGUTILS.STRCAT.@020189860000010001898600000100.RESULT+1
	sta @move.src+1
	@moveSTRING BATCHNAME #32

; optimize FAIL ('STRINGUTILS.STRCAT.@020189860000010001898600000100', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 629

	ldy #$00
	mva:rne $0AE7,y STRINGUTILS.STRCAT.@020189860000010001898600000100.adr.S2,y+
	inx
	mwy BATCHNAME :bp2
	ldy #$00
	mva:rne (:bp2),y STRINGUTILS.STRCAT.@020189860000010001898600000100.adr.S1,y+
	jsr STRINGUTILS.STRCAT.@020189860000010001898600000100
	inx
	lda STRINGUTILS.STRCAT.@020189860000010001898600000100.RESULT
	sta @move.src
	lda STRINGUTILS.STRCAT.@020189860000010001898600000100.RESULT+1
	sta @move.src+1
	@moveSTRING BATCHNAME #32

; optimize FAIL ('LOADTRAININGBATCH', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 630

	mva BATCH :STACKORIGIN,x
	mva BATCH+1 :STACKORIGIN+STACKWIDTH,x
	inx
	mva #$08 :STACKORIGIN,x
	inx
	mwy BATCHNAME :bp2
	ldy #$10
	mva:rpl (:bp2),y LOADTRAININGBATCH.adr.FILENAME,y-
	jsr LOADTRAININGBATCH

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 633

	lda #$00
	sta J
	ldy NEURALNET.BATCHLENGTH
	dey
	sty @FORTMP_135C_0

l_135F
; --- ForToDoCondition
	lda @FORTMP_135C_0::#$00
	cmp J
	jcc l_136D

; optimize FAIL ('CRT.KEYPRESSED', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 635

	jsr CRT.KEYPRESSED
	lda CRT.KEYPRESSED.RESULT
	jeq l_1377

; optimize FAIL ('CONFIRM', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 636

	inx
	mva #$EC :STACKORIGIN,x
	mva #$0A :STACKORIGIN+STACKWIDTH,x
	jsr CONFIRM
	lda CONFIRM.RESULT
	sta STOP
l_1377

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 637

	lda STOP
	jeq l_138B
	jmp b_135F
l_138B

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 639

	lda #$00
	sta I

l_1397
; --- ForToDoCondition
	lda I
	cmp #$20
	jcs l_13A5

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 640

	sta :ecx
	lda #$64
	sta :eax
	.ifdef fmulinit
	fmulu_8
	els
	imulCL
	eif
	lda :eax
	add BATCH
	sta :bp2
	lda :eax+1
	adc BATCH+1
	sta :bp2+1
	ldy J
	lda (:bp2),y
	ldy I
	sta adr.CURRINPUT,y

; --- ForToDoEpilog
	inc I
	jne l_1397
l_13A5

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 641

	lda CURRINPUT
	sta DRAWDIGIT.INPUT
	lda CURRINPUT+1
	sta DRAWDIGIT.INPUT+1
	jsr DRAWDIGIT

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 642

	lda #$80
	add J
	sta :STACKORIGIN+9
	lda #$0C
	adc #$00
	sta :STACKORIGIN+STACKWIDTH+9
	lda BATCH
	add :STACKORIGIN+9
	tay
	lda BATCH+1
	adc :STACKORIGIN+STACKWIDTH+9
	sta :bp+1
	lda (:bp),y
	sta NEURALNET.TRAIN.OUTPUT
	lda CURRINPUT
	sta NEURALNET.TRAIN.INPUT
	lda CURRINPUT+1
	sta NEURALNET.TRAIN.INPUT+1
	jsr NEURALNET.TRAIN

; optimize FAIL ('SYSUTILS.INTTOSTR.@010182000', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 643

	inx
	mva TOTAL :STACKORIGIN,x
	mva TOTAL+1 :STACKORIGIN+STACKWIDTH,x
	mva #$00 :STACKORIGIN+STACKWIDTH*2,x
	sta :STACKORIGIN+STACKWIDTH*3,x
	jsr SYSUTILS.INTTOSTR.@010182000
	lda :STACKORIGIN,x
	sta :bp2
	lda :STACKORIGIN+STACKWIDTH,x
	sta :bp2+1
	ldy #$00
	mva:rne (:bp2),y STRINGUTILS.STRCAT.@020189860000010001898600000100.adr.S2,y+
	inx
	ldy #$00
	mva:rne $0B01,y STRINGUTILS.STRCAT.@020189860000010001898600000100.adr.S1,y+
	jsr STRINGUTILS.STRCAT.@020189860000010001898600000100
	inx
	mva STRINGUTILS.STRCAT.@020189860000010001898600000100.RESULT :STACKORIGIN,x
	mva STRINGUTILS.STRCAT.@020189860000010001898600000100.RESULT+1 :STACKORIGIN+STACKWIDTH,x
	jsr LOG.@0101898600000021

; optimize FAIL (0, /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 644

	lda TOTAL
	bne @+
	dec TOTAL+1
@
	dec TOTAL

; --- ForToDoEpilog
	inc J
	jne l_135F
l_136D
b_135F

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 648

	lda #$00
	sta J
	ldy NEURALNET.BATCHLENGTH
	dey
	sty @FORTMP_13EB_0

l_13EE
; --- ForToDoCondition
	lda @FORTMP_13EB_0::#$00
	cmp J
	jcc l_13FC

; optimize FAIL ('CRT.KEYPRESSED', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 650

	jsr CRT.KEYPRESSED
	lda CRT.KEYPRESSED.RESULT
	jeq l_1406

; optimize FAIL ('CONFIRM', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 651

	inx
	mva #$EC :STACKORIGIN,x
	mva #$0A :STACKORIGIN+STACKWIDTH,x
	jsr CONFIRM
	lda CONFIRM.RESULT
	sta STOP
l_1406

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 652

	lda STOP
	jeq l_141A
	jmp b_13EE
l_141A

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 653

	lda #$00
	sta I

l_1426
; --- ForToDoCondition
	lda I
	cmp #$20
	jcs l_1434

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 654

	sta :ecx
	lda #$64
	sta :eax
	.ifdef fmulinit
	fmulu_8
	els
	imulCL
	eif
	lda :eax
	add BATCH
	sta :bp2
	lda :eax+1
	adc BATCH+1
	sta :bp2+1
	ldy J
	lda (:bp2),y
	ldy I
	sta adr.CURRINPUT,y

; --- ForToDoEpilog
	inc I
	jne l_1426
l_1434

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 655

	lda CURRINPUT
	sta DRAWDIGIT.INPUT
	lda CURRINPUT+1
	sta DRAWDIGIT.INPUT+1
	jsr DRAWDIGIT

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 656

	lda CURRINPUT
	sta NEURALNET.PREDICT.INPUT
	lda CURRINPUT+1
	sta NEURALNET.PREDICT.INPUT+1
	jsr NEURALNET.PREDICT
	lda NEURALNET.PREDICT.RESULT
	sta PREDICTED

; optimize FAIL ('DRAWHIDDENACTIVATIONS', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 657

	jsr DRAWHIDDENACTIVATIONS

; optimize FAIL ('DRAWOUTPUTACTIVATIONS', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 658

	jsr DRAWOUTPUTACTIVATIONS

; optimize FAIL (0, /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 659

	inc PROCESSED
	sne
	inc PROCESSED+1

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 660

	lda #$80
	add J
	sta :STACKORIGIN+9
	lda #$0C
	adc #$00
	sta :STACKORIGIN+STACKWIDTH+9
	lda BATCH
	add :STACKORIGIN+9
	tay
	lda BATCH+1
	adc :STACKORIGIN+STACKWIDTH+9
	sta :bp+1
	lda (:bp),y
	cmp PREDICTED
	jne l_1479

; optimize FAIL (0, /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 661

	inc CORRECT
	sne
	inc CORRECT+1
l_1479

; optimize FAIL ('SYSTEM.FLOATTOSTR', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 662

	inx
	mva CORRECT :STACKORIGIN,x
	mva CORRECT+1 :STACKORIGIN+STACKWIDTH,x
	inx
	mva #$00 :STACKORIGIN,x
	mva PROCESSED :STACKORIGIN+STACKWIDTH,x
	mva PROCESSED+1 :STACKORIGIN+STACKWIDTH*2,x
	mva #$00 :STACKORIGIN+STACKWIDTH*3,x
	sta :STACKORIGIN-1+STACKWIDTH*2,x
	sta :STACKORIGIN-1+STACKWIDTH*3,x
	jsr @expandToREAL1
	lda :STACKORIGIN,x
	sta @REAL_DIV.B
	lda :STACKORIGIN+STACKWIDTH,x
	sta @REAL_DIV.B+1
	lda :STACKORIGIN+STACKWIDTH*2,x
	sta @REAL_DIV.B+2
	lda :STACKORIGIN+STACKWIDTH*3,x
	sta @REAL_DIV.B+3
	lda :STACKORIGIN-1,x
	sta @REAL_DIV.A
	lda :STACKORIGIN-1+STACKWIDTH,x
	sta @REAL_DIV.A+1
	lda :STACKORIGIN-1+STACKWIDTH*2,x
	sta @REAL_DIV.A+2
	lda :STACKORIGIN-1+STACKWIDTH*3,x
	sta @REAL_DIV.A+3
	jsr @REAL_DIV
	lda :eax
	sta :STACKORIGIN-1,x
	lda :eax+1
	sta :STACKORIGIN-1+STACKWIDTH,x
	lda :eax+2
	sta :STACKORIGIN-1+STACKWIDTH*2,x
	lda :eax+3
	sta :STACKORIGIN-1+STACKWIDTH*3,x
	lda #$00
	sta @REAL_MUL.B
	lda #$64
	sta @REAL_MUL.B+1
	lda #$00
	sta @REAL_MUL.B+2
	lda #$00
	sta @REAL_MUL.B+3
	lda :STACKORIGIN-1,x
	sta @REAL_MUL.A
	lda :STACKORIGIN-1+STACKWIDTH,x
	sta @REAL_MUL.A+1
	lda :STACKORIGIN-1+STACKWIDTH*2,x
	sta @REAL_MUL.A+2
	lda :STACKORIGIN-1+STACKWIDTH*3,x
	sta @REAL_MUL.A+3
	jsr @REAL_MUL
	lda :eax
	sta :STACKORIGIN-1,x
	lda :eax+1
	sta :STACKORIGIN-1+STACKWIDTH,x
	lda :eax+2
	sta :STACKORIGIN-1+STACKWIDTH*2,x
	lda :eax+3
	sta :STACKORIGIN-1+STACKWIDTH*3,x
	dex
	jsr SYSTEM.FLOATTOSTR
	lda :STACKORIGIN,x
	sta :bp2
	lda :STACKORIGIN+STACKWIDTH,x
	sta :bp2+1
	ldy #$00
	mva:rne (:bp2),y STRINGUTILS.STRCAT.@020189860000010001898600000100.adr.S2,y+
	inx
	ldy #$00
	mva:rne $0B14,y STRINGUTILS.STRCAT.@020189860000010001898600000100.adr.S1,y+
	jsr STRINGUTILS.STRCAT.@020189860000010001898600000100
	inx
	mva STRINGUTILS.STRCAT.@020189860000010001898600000100.RESULT :STACKORIGIN,x
	mva STRINGUTILS.STRCAT.@020189860000010001898600000100.RESULT+1 :STACKORIGIN+STACKWIDTH,x
	jsr LOG.@0101898600000021

; --- ForToDoEpilog
	inc J
	jne l_13EE
l_13FC
b_13EE

; --- ForToDoEpilog
	inc l_1330+1
	jne l_1330
l_1333
b_1330

; --- ForToDoEpilog
	inc EPOCH
	jne l_1309
l_1317
b_1309

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 666

	lda STOP
	jeq l_14A6
	inx
	mva #$1E :STACKORIGIN,x
	mva #$0B :STACKORIGIN+STACKWIDTH,x
	jsr LOG.@0101898600000021
l_14A6

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 667

	lda #$00
	sta STOP

; ------------------------------------------------------------

EPOCHS	= DATAORIGIN+$5EDE
PROCESSED	= DATAORIGIN+$5EDF
TOTAL	= DATAORIGIN+$5EE1
STOP	= DATAORIGIN+$5EE3

@VarData	= EPOCHS
@VarDataSize	= 6

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	SCANKEY						; PROCEDURE

; optimize FAIL ('CRT.READKEY', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 678

	jsr CRT.READKEY
	lda CRT.READKEY.RESULT
	sta C

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 679

	sta @CASETMP_0008
	cmp #$A5
	jne l_14C2
@

; optimize FAIL ('DISPLAYMENU', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 681

	inx
	mva #$92 :STACKORIGIN,x
	mva #$0B :STACKORIGIN+STACKWIDTH,x
	jsr DISPLAYMENU

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 682

	lda #$02
	jsr TRAINLOOP

; optimize FAIL ('DISPLAYMENU', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 683

	inx
	mva #$88 :STACKORIGIN,x
	mva #$0B :STACKORIGIN+STACKWIDTH,x
	jsr DISPLAYMENU
	jmp a_0008
l_14C2
	cmp #$A9
	jne l_14CF

; optimize FAIL ('CONFIRM', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 685

	inx
	mva #$2F :STACKORIGIN,x
	mva #$0B :STACKORIGIN+STACKWIDTH,x
	jsr CONFIRM
	lda CONFIRM.RESULT
	jeq l_14DA

; optimize FAIL ('LOG.@0101898600000021', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 687

	inx
	mva #$43 :STACKORIGIN,x
	mva #$0B :STACKORIGIN+STACKWIDTH,x
	jsr LOG.@0101898600000021

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 688

	lda #$08
	jsr SAVENETWORKPARAMETERS

; optimize FAIL ('LOG.@0101898600000021', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 689

	inx
	mva #$58 :STACKORIGIN,x
	mva #$0B :STACKORIGIN+STACKWIDTH,x
	jsr LOG.@0101898600000021
l_14DA
	jmp a_0008
l_14CF
	cmp #$A6
	jne l_14EA

; optimize FAIL ('CONFIRM', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 691

	inx
	mva #$2F :STACKORIGIN,x
	mva #$0B :STACKORIGIN+STACKWIDTH,x
	jsr CONFIRM
	lda CONFIRM.RESULT
	jeq l_14F5

; optimize FAIL ('LOG.@0101898600000021', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 693

	inx
	mva #$60 :STACKORIGIN,x
	mva #$0B :STACKORIGIN+STACKWIDTH,x
	jsr LOG.@0101898600000021

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 694

	lda #$08
	jsr LOADNETWORKPARAMETERS

; optimize FAIL ('LOG.@0101898600000021', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 695

	inx
	mva #$58 :STACKORIGIN,x
	mva #$0B :STACKORIGIN+STACKWIDTH,x
	jsr LOG.@0101898600000021
l_14F5
	jmp a_0008
l_14EA
	cmp #$AA
	jne l_1505

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 697

	lda #$01
	sta CLEARSCREENAREA.X1
	sta CLEARSCREENAREA.Y1
	lda #$10
	sta CLEARSCREENAREA.X2
	sta CLEARSCREENAREA.Y2
	jsr CLEARSCREENAREA
	jsr CLEARDIGIT
	jmp a_0008
l_1505
	cmp #$A7
	jne l_1512

; optimize FAIL ('DISPLAYMENU', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 698

	inx
	mva #$9C :STACKORIGIN,x
	mva #$0B :STACKORIGIN+STACKWIDTH,x
	jsr DISPLAYMENU
	jsr DRAWANDPREDICT
	inx
	mva #$88 :STACKORIGIN,x
	mva #$0B :STACKORIGIN+STACKWIDTH,x
	jsr DISPLAYMENU
l_1512
a_0008

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 702

	lda #$00
	sta KEYBOARDBUFFERLENGTH

; ------------------------------------------------------------

C	= DATAORIGIN+$5EE7
@CASETMP_0008	= DATAORIGIN+$5EE8

@VarData	= C
@VarDataSize	= 2

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl
l_027A

; optimize FAIL ('C64RANDOMIZE', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 708

	jsr C64RANDOMIZE

; optimize FAIL ('INIT', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 709

	jsr INIT

; optimize FAIL ('DISPLAYMENU', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 710

	inx
	mva #$88 :STACKORIGIN,x
	mva #$0B :STACKORIGIN+STACKWIDTH,x
	jsr DISPLAYMENU

; --- RepeatUntilProlog
l_1528

; optimize FAIL ('CRT.KEYPRESSED', /Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 712

	jsr CRT.KEYPRESSED
	lda CRT.KEYPRESSED.RESULT
	jeq l_1532
	jsr SCANKEY
l_1532

; optimize OK (/Users/manuelvio/sviluppo/PETSCII-Boy-3000/pascal/PetsciiBoy3000.pas), line = 713

	jmp l_1528

; ------------------------------------------------------------

DRIVE_NO	= $08
CANVAS_X	= $01
CANVAS_Y	= $01
CANVAS_HEIGHT	= $10
CANVAS_WIDTH	= $10
BLANK	= $20
CANVAS_PIXEL_ON	= $2A
CANVAS_PIXEL_OFF	= $20
KEY_Y	= $79
MENU_ITEMS	= $05
BATCHES_COUNT	= $10
INPUT_JOYSTICK	= $00
INPUT_LIGHTPEN	= $01
adr.ACTIVATION_HISTOGRAM_LEVELS	= CODEORIGIN+$0276
.var ACTIVATION_HISTOGRAM_LEVELS	= adr.ACTIVATION_HISTOGRAM_LEVELS .word
adr.MAIN_MENU	= CODEORIGIN+$0288
.var MAIN_MENU	= adr.MAIN_MENU .word
adr.TRAINING_MENU	= CODEORIGIN+$0292
.var TRAINING_MENU	= adr.TRAINING_MENU .word
adr.DRAWING_MENU	= CODEORIGIN+$029C
.var DRAWING_MENU	= adr.DRAWING_MENU .word
KEYBOARDBUFFERLENGTH	= $C6
SPRITE0ADDRMULT	= $07F8
SPRITE1ADDRMULT	= $07F9
adr.SCREENRAM	= $0400
.var SCREENRAM	= adr.SCREENRAM .word
CURRENTCOLOR	= $0286
EPOCH	= DATAORIGIN+$40CD
I	= DATAORIGIN+$40CE
J	= DATAORIGIN+$40CF
DX	= DATAORIGIN+$40D0
DY	= DATAORIGIN+$40D1
adr.BATCH	= [DATAORIGIN+$40D2] .array [33] [100]
.var BATCH	= adr.BATCH .word
adr.CURRINPUT	= [DATAORIGIN+$4DB6] .array [32]
.var CURRINPUT	= adr.CURRINPUT .word
adr.BATCHINDEXES	= [DATAORIGIN+$4DD6] .array [16]
.var BATCHINDEXES	= adr.BATCHINDEXES .word
BATCHIDX	= DATAORIGIN+$4DE6
adr.BATCHNAME	= [DATAORIGIN+$4DE7] .array [33]
.var BATCHNAME	= adr.BATCHNAME .word
CORRECT	= DATAORIGIN+$4E08
PREDICTED	= DATAORIGIN+$4E0A
adr.CURSORSPRITEDATA	= [DATAORIGIN+$4E0B] .array [4096]
.var CURSORSPRITEDATA	= adr.CURSORSPRITEDATA .word
adr.CURSORSPRITE	= $0380
.var CURSORSPRITE	= adr.CURSORSPRITE .word
adr.DIGITSPRITE	= $0340
.var DIGITSPRITE	= adr.DIGITSPRITE .word
CURSORX	= DATAORIGIN+$5E0B
CURSORY	= DATAORIGIN+$5E0C
OLDCURSORX	= DATAORIGIN+$5E0D
OLDCURSORY	= DATAORIGIN+$5E0E
CURSORMOVED	= DATAORIGIN+$5E0F
ROW	= DATAORIGIN+$5E10
BIT	= DATAORIGIN+$5E11
adr.CHARDATA	= [DATAORIGIN+$5E12] .array [8]
.var CHARDATA	= adr.CHARDATA .word
INPUTMODE	= DATAORIGIN+$5E1A
@exit

@halt	ldx #$00
	txs

	rts

; ------------------------------------------------------------

.local	@DEFINES
C64
CPU_6502
.endl

.local	@RESOURCE
.endl

.endl							; MAIN

; ------------------------------------------------------------
; ------------------------------------------------------------

.macro	UNITINITIALIZATION

	.ifdef MAIN.SYSTEM.@UnitInit
	jsr MAIN.SYSTEM.@UnitInit
	.fi

	.ifdef MAIN.CRT.@UnitInit
	jsr MAIN.CRT.@UnitInit
	.fi

	.ifdef MAIN.DOS.@UnitInit
	jsr MAIN.DOS.@UnitInit
	.fi

	.ifdef MAIN.STRUTILS.@UnitInit
	jsr MAIN.STRUTILS.@UnitInit
	.fi

	.ifdef MAIN.SYSUTILS.@UnitInit
	jsr MAIN.SYSUTILS.@UnitInit
	.fi

	.ifdef MAIN.C64.@UnitInit
	jsr MAIN.C64.@UnitInit
	.fi

	.ifdef MAIN.MATH.@UnitInit
	jsr MAIN.MATH.@UnitInit
	.fi

	.ifdef MAIN.STRINGUTILS.@UnitInit
	jsr MAIN.STRINGUTILS.@UnitInit
	.fi

	.ifdef MAIN.KERNAL.@UnitInit
	jsr MAIN.KERNAL.@UnitInit
	.fi

	.ifdef MAIN.NEURALNET.@UnitInit
	jsr MAIN.NEURALNET.@UnitInit
	.fi

	.ifdef MAIN.HARDWARE.@UnitInit
	jsr MAIN.HARDWARE.@UnitInit
	.fi

	.ifdef MAIN.JOYSTICK.@UnitInit
	jsr MAIN.JOYSTICK.@UnitInit
	.fi

	.ifdef MAIN.MOUSE1531.@UnitInit
	jsr MAIN.MOUSE1531.@UnitInit
	.fi

	.ifdef MAIN.LIGHTPEN.@UnitInit
	jsr MAIN.LIGHTPEN.@UnitInit
	.fi
.endm

; ------------------------------------------------------------

	ift .SIZEOF(MAIN.SYSTEM) > 0
	.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
	eif

	ift .SIZEOF(MAIN.CRT) > 0
	.print 'CRT: ',MAIN.CRT,'..',MAIN.CRT+.SIZEOF(MAIN.CRT)-1
	eif

	ift .SIZEOF(MAIN.DOS) > 0
	.print 'DOS: ',MAIN.DOS,'..',MAIN.DOS+.SIZEOF(MAIN.DOS)-1
	eif

	ift .SIZEOF(MAIN.STRUTILS) > 0
	.print 'STRUTILS: ',MAIN.STRUTILS,'..',MAIN.STRUTILS+.SIZEOF(MAIN.STRUTILS)-1
	eif

	ift .SIZEOF(MAIN.SYSUTILS) > 0
	.print 'SYSUTILS: ',MAIN.SYSUTILS,'..',MAIN.SYSUTILS+.SIZEOF(MAIN.SYSUTILS)-1
	eif

	ift .SIZEOF(MAIN.C64) > 0
	.print 'C64: ',MAIN.C64,'..',MAIN.C64+.SIZEOF(MAIN.C64)-1
	eif

	ift .SIZEOF(MAIN.MATH) > 0
	.print 'MATH: ',MAIN.MATH,'..',MAIN.MATH+.SIZEOF(MAIN.MATH)-1
	eif

	ift .SIZEOF(MAIN.STRINGUTILS) > 0
	.print 'STRINGUTILS: ',MAIN.STRINGUTILS,'..',MAIN.STRINGUTILS+.SIZEOF(MAIN.STRINGUTILS)-1
	eif

	ift .SIZEOF(MAIN.KERNAL) > 0
	.print 'KERNAL: ',MAIN.KERNAL,'..',MAIN.KERNAL+.SIZEOF(MAIN.KERNAL)-1
	eif

	ift .SIZEOF(MAIN.NEURALNET) > 0
	.print 'NEURALNET: ',MAIN.NEURALNET,'..',MAIN.NEURALNET+.SIZEOF(MAIN.NEURALNET)-1
	eif

	ift .SIZEOF(MAIN.HARDWARE) > 0
	.print 'HARDWARE: ',MAIN.HARDWARE,'..',MAIN.HARDWARE+.SIZEOF(MAIN.HARDWARE)-1
	eif

	ift .SIZEOF(MAIN.JOYSTICK) > 0
	.print 'JOYSTICK: ',MAIN.JOYSTICK,'..',MAIN.JOYSTICK+.SIZEOF(MAIN.JOYSTICK)-1
	eif

	ift .SIZEOF(MAIN.MOUSE1531) > 0
	.print 'MOUSE1531: ',MAIN.MOUSE1531,'..',MAIN.MOUSE1531+.SIZEOF(MAIN.MOUSE1531)-1
	eif

	ift .SIZEOF(MAIN.LIGHTPEN) > 0
	.print 'LIGHTPEN: ',MAIN.LIGHTPEN,'..',MAIN.LIGHTPEN+.SIZEOF(MAIN.LIGHTPEN)-1
	eif

.nowarn	.print 'CODE: ',CODEORIGIN,'..',MAIN.@RESOURCE-1

	ift .SIZEOF(MAIN.@RESOURCE)>0
.nowarn	.print 'RESOURCE: ',MAIN.@RESOURCE,'..',MAIN.@RESOURCE+.SIZEOF(MAIN.@RESOURCE)-1
	eif

@end

.nowarn	.print 'VARS: ',MAIN.@RESOURCE+.SIZEOF(MAIN.@RESOURCE),'..',@end-1

; ------------------------------------------------------------

	?adr = *
	ift (?adr < ?old_adr) && (?old_adr - ?adr < $120)
	?adr = ?old_adr
	eif

	org ?adr
	?old_adr = *

DATAORIGIN
.by  $2D $0C $00 $00 $00 $28 $00 $18  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $0F $01  $02 $03 $04 $05 $06 $07 $08 $09  $0A $0B $0C $0D $0E $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $FF $00 $00 $C1 $00  $00 $81 $00 $00 $81 $00 $00 $81
.by  $00 $00 $81 $00 $00 $83 $00 $00  $FF $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $80 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $01

VARINITSIZE	= *-DATAORIGIN
VARDATASIZE	= 24297

PROGRAMSTACK	= DATAORIGIN+VARDATASIZE

	.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK

	ert DATAORIGIN<@end,'DATA memory overlap'

; ------------------------------------------------------------

.macro	STATICDATA
.by  $04 $54 $52 $55 $45 $05 $46 $41  $4C $53 $45 $00 $12 $75 $6E $69  $74 $73 $5C $6A $6F $79 $73 $74
.by  $69 $63 $6B $2E $70 $61 $73 $03  $20 $00 $00 $03 $A4 $00 $00 $03  $AF $00 $00 $03 $B9 $00 $00 $03
.by  $A2 $00 $00 $03 $12 $B8 $92 $03  $12 $B7 $92 $03 $12 $A3 $92 $03  $12 $20 $92 $08 $46 $31 $2D $54
.by  $72 $61 $69 $6E $0E $46 $32 $2D  $53 $61 $76 $65 $20 $70 $61 $72  $61 $6D $73 $0E $46 $33 $2D $4C
.by  $6F $61 $64 $20 $70 $61 $72 $61  $6D $73 $0F $46 $34 $2D $43 $6C  $65 $61 $72 $20 $43 $61 $6E $76
.by  $61 $73 $07 $46 $35 $2D $44 $72  $61 $77 $0D $50 $72 $65 $73 $73  $20 $61 $6E $79 $20 $6B $65 $79
.by  $07 $74 $6F $20 $73 $74 $6F $70  $0B $46 $31 $2D $4A $6F $79 $73  $74 $69 $63 $6B $0C $46 $32 $2D
.by  $4C $69 $67 $68 $74 $20 $70 $65  $6E $0A $46 $35 $2D $50 $72 $65  $64 $69 $63 $74 $09 $40 $30 $3A
.by  $57 $48 $2C $55 $2C $57 $09 $40  $30 $3A $57 $4F $2C $55 $2C $57  $09 $40 $30 $3A $42 $48 $2C $55
.by  $2C $57 $09 $40 $30 $3A $42 $4F  $2C $55 $2C $57 $06 $57 $48 $2C  $55 $2C $52 $06 $57 $4F $2C $55
.by  $2C $52 $06 $42 $48 $2C $55 $2C  $52 $06 $42 $4F $2C $55 $2C $52  $0E $42 $41 $43 $4B $47 $52 $4F
.by  $55 $4E $44 $2C $53 $2C $52 $14  $49 $6E $70 $75 $74 $20 $6D $6F  $64 $65 $3A $20 $4A $6F $79 $73
.by  $74 $69 $63 $6B $15 $49 $6E $70  $75 $74 $20 $6D $6F $64 $65 $3A  $20 $4C $69 $67 $68 $74 $20 $70
.by  $65 $6E $13 $45 $78 $69 $74 $20  $64 $72 $61 $77 $69 $6E $67 $3F  $20 $28 $59 $2F $4E $29 $14 $49
.by  $20 $74 $68 $69 $6E $6B $20 $79  $6F $75 $20 $77 $72 $6F $74 $65  $20 $61 $20 $11 $41 $6D $20 $49
.by  $20 $72 $69 $67 $68 $74 $3F $20  $28 $59 $2F $4E $29 $18 $45 $6E  $74 $65 $72 $20 $74 $68 $65 $20
.by  $63 $6F $72 $72 $65 $63 $74 $20  $64 $69 $67 $69 $74 $3A $14 $41  $64 $6A $75 $73 $74 $69 $6E $67
.by  $20 $77 $65 $69 $67 $68 $74 $73  $2E $2E $2E $1A $49 $74 $20 $77  $69 $6C $6C $20 $74 $61 $6B $65
.by  $20 $61 $20 $6C $6F $74 $20 $6F  $66 $20 $74 $69 $6D $65 $11 $4D  $61 $6B $65 $20 $61 $20 $63 $75
.by  $70 $20 $6F $66 $20 $74 $65 $61  $0F $50 $75 $74 $20 $61 $20 $72  $65 $63 $6F $72 $64 $20 $6F $6E
.by  $06 $4E $45 $55 $52 $41 $4C $04  $2C $55 $2C $52 $14 $53 $74 $6F  $70 $20 $74 $72 $61 $69 $6E $69
.by  $6E $67 $3F $20 $28 $59 $2F $4E  $29 $12 $52 $65 $63 $6F $72 $64  $73 $20 $72 $65 $6D $61 $69 $6E
.by  $69 $6E $67 $3A $09 $41 $63 $63  $75 $72 $61 $63 $79 $3D $10 $54  $72 $61 $69 $6E $69 $6E $67 $20
.by  $73 $74 $6F $70 $70 $65 $64 $13  $41 $72 $65 $20 $79 $6F $75 $20  $73 $75 $72 $65 $3F $20 $28 $59
.by  $2F $4E $29 $14 $53 $61 $76 $69  $6E $67 $20 $70 $61 $72 $61 $6D  $65 $74 $65 $72 $73 $2E $2E $2E
.by  $07 $2E $2E $2E $64 $6F $6E $65  $15 $4C $6F $61 $64 $69 $6E $67  $20 $70 $61 $72 $61 $6D $65 $74
.by  $65 $72 $73 $2E $2E $2E $1F $09  $23 $09 $27 $09 $2B $09 $2F $09  $33 $09 $37 $09 $3B $09 $3F $09
.by  $43 $09 $4C $09 $5B $09 $6A $09  $7A $09 $82 $09 $90 $09 $0B $09  $0B $09 $0B $09 $98 $09 $A4 $09
.by  $0B $09 $0B $09 $B1 $09
.endm

	end
